{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\roshi\\\\Desktop\\\\college\\\\internship\\\\webdev\\\\project\\\\try\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import './App.css';\n// import { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\n// import Homepage from './HomePage'; \n// import AlbumDetails from './AlbumDetails'; \n// import Footer from './footer';\n// import Sidebar from './sidebar';\n// import SearchPage from './SearchPage';\n// import PlaylistDetails from './PlaylistDetails';\n// import Favorites from './Favorites'; \n\n// function App() {\n//   const [selectedSong, setSelectedSong] = useState(null);\n\n//   return (\n//     <Router>\n//       <div className=\"App\">\n//         <div className=\"container\">\n//           <Sidebar className=\"sidebar\" />\n//           <div className=\"content\">\n//             <Routes>\n//               <Route\n//                 path=\"/\"\n//                 element={<Homepage setSelectedSong={setSelectedSong}/>}\n//               />\n//               <Route\n//                 path=\"/album/:albumId\"\n//                 element={<AlbumDetails setSelectedSong={setSelectedSong} />}\n//               />\n//               <Route\n//                 path=\"/search\"\n//                 element={<SearchPage playSong={setSelectedSong} />}\n//               />\n//               <Route\n//                 path=\"/playlist/:playlistId\"\n//                 element={<PlaylistDetails setSelectedSong={setSelectedSong} />}\n//               />\n//               {/* Add the route for the Favorites page */}\n//               <Route\n//                 path=\"/favorites\"\n//                 element={<Favorites setSelectedSong={setSelectedSong} />}\n//               />\n//               {/* <Route\n//                 path=\"/\"\n//                 element={<RecentlyPlayed setSelectedSong={setSelectedSong} />}\n//               /> */}\n//             </Routes>\n//           </div>\n//         </div>\n//         <footer className=\"footer\">\n//           {selectedSong && <Footer selectedSong={selectedSong} />}\n//         </footer>\n//       </div>\n//     </Router>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport './App.css'; // Import your CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const audioRef = useRef(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [volume, setVolume] = useState(1);\n  useEffect(() => {\n    const audio = audioRef.current;\n\n    // Update play/pause button text when audio state changes\n    audio.addEventListener('play', () => setIsPlaying(true));\n    audio.addEventListener('pause', () => setIsPlaying(false));\n    return () => {\n      // Remove event listeners on component unmount\n      audio.removeEventListener('play', () => setIsPlaying(true));\n      audio.removeEventListener('pause', () => setIsPlaying(false));\n    };\n  }, []);\n  const togglePlayPause = () => {\n    const audio = audioRef.current;\n    if (audio.paused) {\n      audio.play();\n    } else {\n      audio.pause();\n    }\n  };\n  const handleVolumeChange = event => {\n    const audio = audioRef.current;\n    setVolume(event.target.value);\n    audio.volume = event.target.value;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      src: \"01-fka_twigs-thousand_eyes.flac\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"customControls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: togglePlayPause,\n        children: isPlaying ? 'Pause' : 'Play'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"0\",\n        max: \"1\",\n        step: \"0.1\",\n        value: volume,\n        onChange: handleVolumeChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"7TP87SRgZ6ptSZcQl78D5OAzC4Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","App","_s","audioRef","isPlaying","setIsPlaying","volume","setVolume","audio","current","addEventListener","removeEventListener","togglePlayPause","paused","play","pause","handleVolumeChange","event","target","value","children","ref","src","fileName","_jsxFileName","lineNumber","columnNumber","id","onClick","type","min","max","step","onChange","_c","$RefreshReg$"],"sources":["C:/Users/roshi/Desktop/college/internship/webdev/project/try/client/src/App.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import './App.css';\n// import { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\n// import Homepage from './HomePage'; \n// import AlbumDetails from './AlbumDetails'; \n// import Footer from './footer';\n// import Sidebar from './sidebar';\n// import SearchPage from './SearchPage';\n// import PlaylistDetails from './PlaylistDetails';\n// import Favorites from './Favorites'; \n\n// function App() {\n//   const [selectedSong, setSelectedSong] = useState(null);\n\n//   return (\n//     <Router>\n//       <div className=\"App\">\n//         <div className=\"container\">\n//           <Sidebar className=\"sidebar\" />\n//           <div className=\"content\">\n//             <Routes>\n//               <Route\n//                 path=\"/\"\n//                 element={<Homepage setSelectedSong={setSelectedSong}/>}\n//               />\n//               <Route\n//                 path=\"/album/:albumId\"\n//                 element={<AlbumDetails setSelectedSong={setSelectedSong} />}\n//               />\n//               <Route\n//                 path=\"/search\"\n//                 element={<SearchPage playSong={setSelectedSong} />}\n//               />\n//               <Route\n//                 path=\"/playlist/:playlistId\"\n//                 element={<PlaylistDetails setSelectedSong={setSelectedSong} />}\n//               />\n//               {/* Add the route for the Favorites page */}\n//               <Route\n//                 path=\"/favorites\"\n//                 element={<Favorites setSelectedSong={setSelectedSong} />}\n//               />\n//               {/* <Route\n//                 path=\"/\"\n//                 element={<RecentlyPlayed setSelectedSong={setSelectedSong} />}\n//               /> */}\n//             </Routes>\n//           </div>\n//         </div>\n//         <footer className=\"footer\">\n//           {selectedSong && <Footer selectedSong={selectedSong} />}\n//         </footer>\n//       </div>\n//     </Router>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport './App.css'; // Import your CSS file\n\nconst App = () => {\n  const audioRef = useRef(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [volume, setVolume] = useState(1);\n\n  useEffect(() => {\n    const audio = audioRef.current;\n\n    // Update play/pause button text when audio state changes\n    audio.addEventListener('play', () => setIsPlaying(true));\n    audio.addEventListener('pause', () => setIsPlaying(false));\n\n    return () => {\n      // Remove event listeners on component unmount\n      audio.removeEventListener('play', () => setIsPlaying(true));\n      audio.removeEventListener('pause', () => setIsPlaying(false));\n    };\n  }, []);\n\n  const togglePlayPause = () => {\n    const audio = audioRef.current;\n    if (audio.paused) {\n      audio.play();\n    } else {\n      audio.pause();\n    }\n  };\n\n  const handleVolumeChange = (event) => {\n    const audio = audioRef.current;\n    setVolume(event.target.value);\n    audio.volume = event.target.value;\n  };\n\n  return (\n    <div>\n      <audio ref={audioRef} src=\"01-fka_twigs-thousand_eyes.flac\"></audio>\n\n      <div id=\"customControls\">\n        <button onClick={togglePlayPause}>\n          {isPlaying ? 'Pause' : 'Play'}\n        </button>\n        <input\n          type=\"range\"\n          min=\"0\"\n          max=\"1\"\n          step=\"0.1\"\n          value={volume}\n          onChange={handleVolumeChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAO,WAAW,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAMC,QAAQ,GAAGN,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAEvCE,SAAS,CAAC,MAAM;IACd,MAAMU,KAAK,GAAGL,QAAQ,CAACM,OAAO;;IAE9B;IACAD,KAAK,CAACE,gBAAgB,CAAC,MAAM,EAAE,MAAML,YAAY,CAAC,IAAI,CAAC,CAAC;IACxDG,KAAK,CAACE,gBAAgB,CAAC,OAAO,EAAE,MAAML,YAAY,CAAC,KAAK,CAAC,CAAC;IAE1D,OAAO,MAAM;MACX;MACAG,KAAK,CAACG,mBAAmB,CAAC,MAAM,EAAE,MAAMN,YAAY,CAAC,IAAI,CAAC,CAAC;MAC3DG,KAAK,CAACG,mBAAmB,CAAC,OAAO,EAAE,MAAMN,YAAY,CAAC,KAAK,CAAC,CAAC;IAC/D,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,eAAe,GAAGA,CAAA,KAAM;IAC5B,MAAMJ,KAAK,GAAGL,QAAQ,CAACM,OAAO;IAC9B,IAAID,KAAK,CAACK,MAAM,EAAE;MAChBL,KAAK,CAACM,IAAI,CAAC,CAAC;IACd,CAAC,MAAM;MACLN,KAAK,CAACO,KAAK,CAAC,CAAC;IACf;EACF,CAAC;EAED,MAAMC,kBAAkB,GAAIC,KAAK,IAAK;IACpC,MAAMT,KAAK,GAAGL,QAAQ,CAACM,OAAO;IAC9BF,SAAS,CAACU,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IAC7BX,KAAK,CAACF,MAAM,GAAGW,KAAK,CAACC,MAAM,CAACC,KAAK;EACnC,CAAC;EAED,oBACEnB,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAOqB,GAAG,EAAElB,QAAS;MAACmB,GAAG,EAAC;IAAiC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAEpE1B,OAAA;MAAK2B,EAAE,EAAC,gBAAgB;MAAAP,QAAA,gBACtBpB,OAAA;QAAQ4B,OAAO,EAAEhB,eAAgB;QAAAQ,QAAA,EAC9BhB,SAAS,GAAG,OAAO,GAAG;MAAM;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC,eACT1B,OAAA;QACE6B,IAAI,EAAC,OAAO;QACZC,GAAG,EAAC,GAAG;QACPC,GAAG,EAAC,GAAG;QACPC,IAAI,EAAC,KAAK;QACVb,KAAK,EAAEb,MAAO;QACd2B,QAAQ,EAAEjB;MAAmB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACxB,EAAA,CArDID,GAAG;AAAAiC,EAAA,GAAHjC,GAAG;AAuDT,eAAeA,GAAG;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}