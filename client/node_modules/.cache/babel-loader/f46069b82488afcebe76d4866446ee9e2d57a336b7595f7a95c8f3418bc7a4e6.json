{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\roshi\\\\Desktop\\\\college\\\\internship\\\\webdev\\\\project\\\\try\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\nimport Homepage from './HomePage';\nimport AlbumDetails from './AlbumDetails';\nimport Footer from './footer';\nimport Sidebar from './sidebar';\nimport SearchPage from './SearchPage';\nimport LogInPage from './LogInPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedSong, setSelectedSong] = useState(null);\n  const [isLogin, setIsLogin] = useState(false);\n  const handleToggle = () => {\n    setIsLogin(!isLogin);\n  };\n\n  // Dummy authentication function, replace with your actual logic\n  const handleLogin = credentials => {\n    // Perform authentication logic here\n    // For simplicity, considering login successful if username is 'user' and password is 'pass'\n    const {\n      username,\n      password\n    } = credentials;\n    if (username === 'user' && password === 'pass') {\n      setIsLogin(true);\n    }\n  };\n\n  // Redirect to login page if not logged in\n  if (!isLogin) {\n    return /*#__PURE__*/_jsxDEV(LogInPage, {\n      onToggle: handleToggle,\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Render the rest of the content if logged in\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n          className: \"sidebar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: /*#__PURE__*/_jsxDEV(Routes, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              element: /*#__PURE__*/_jsxDEV(Homepage, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 26\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/album/:albumId\",\n              element: /*#__PURE__*/_jsxDEV(AlbumDetails, {\n                setSelectedSong: setSelectedSong\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 26\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/search\",\n              element: /*#__PURE__*/_jsxDEV(SearchPage, {\n                playSong: setSelectedSong\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 26\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: \"footer\",\n        children: selectedSong && /*#__PURE__*/_jsxDEV(Footer, {\n          selectedSong: selectedSong\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 28\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"m+vz5xy87zhkVtfQ3oaRDcZIR/w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Routes","Navigate","Homepage","AlbumDetails","Footer","Sidebar","SearchPage","LogInPage","jsxDEV","_jsxDEV","App","_s","selectedSong","setSelectedSong","isLogin","setIsLogin","handleToggle","handleLogin","credentials","username","password","onToggle","onLogin","fileName","_jsxFileName","lineNumber","columnNumber","children","className","path","element","playSong","_c","$RefreshReg$"],"sources":["C:/Users/roshi/Desktop/college/internship/webdev/project/try/client/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\nimport Homepage from './HomePage'; \nimport AlbumDetails from './AlbumDetails'; \nimport Footer from './footer';\nimport Sidebar from './sidebar';\nimport SearchPage from './SearchPage';\nimport LogInPage from './LogInPage';\n\nfunction App() {\n  const [selectedSong, setSelectedSong] = useState(null);\n  const [isLogin, setIsLogin] = useState(false);\n\n  const handleToggle = () => {\n    setIsLogin(!isLogin);\n  };\n\n  // Dummy authentication function, replace with your actual logic\n  const handleLogin = (credentials) => {\n    // Perform authentication logic here\n    // For simplicity, considering login successful if username is 'user' and password is 'pass'\n    const { username, password } = credentials;\n    if (username === 'user' && password === 'pass') {\n      setIsLogin(true);\n    }\n  };\n\n  // Redirect to login page if not logged in\n  if (!isLogin) {\n    return <LogInPage onToggle={handleToggle} onLogin={handleLogin} />;\n  }\n\n  // Render the rest of the content if logged in\n  return (\n    <Router>\n      <div className=\"App\">\n        <div className=\"container\">\n          <Sidebar className=\"sidebar\" />\n          <div className=\"content\">\n            <Routes>\n              <Route\n                path=\"/\"\n                element={<Homepage />}\n              />\n              <Route\n                path=\"/album/:albumId\"\n                element={<AlbumDetails setSelectedSong={setSelectedSong} />}\n              />\n              <Route\n                path=\"/search\"\n                element={<SearchPage playSong={setSelectedSong} />}\n              />\n            </Routes>\n          </div>\n        </div>\n        <footer className=\"footer\">\n          {selectedSong && <Footer selectedSong={selectedSong} />}\n        </footer>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}