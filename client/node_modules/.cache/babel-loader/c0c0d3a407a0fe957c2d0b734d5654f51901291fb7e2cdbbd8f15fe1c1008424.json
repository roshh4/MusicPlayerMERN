{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\roshi\\\\Desktop\\\\college\\\\internship\\\\webdev\\\\project\\\\try\\\\client\\\\src\\\\AlbumDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AlbumDetails = ({\n  setSelectedSong\n}) => {\n  _s();\n  const {\n    albumId\n  } = useParams();\n  const [album, setAlbum] = useState(null);\n  const [currentTrackIndex, setCurrentTrackIndex] = useState(0);\n  useEffect(() => {\n    fetch(`http://localhost:3002/api/albums/${albumId}`).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      return response.json();\n    }).then(data => setAlbum(data)).catch(error => console.error(error));\n  }, [albumId]);\n  const handleSongClick = (track, index) => {\n    setSelectedSong(track);\n    setCurrentTrackIndex(index);\n  };\n  const playNextTrack = () => {\n    const nextIndex = (currentTrackIndex + 1) % album.tracklist.length;\n    setSelectedSong(album.tracklist[nextIndex]);\n    setCurrentTrackIndex(nextIndex);\n  };\n  const handleAudioEnded = () => {\n    // Play the next track when the current one ends\n    playNextTrack();\n  };\n  useEffect(() => {\n    const audioElement = document.getElementById('audioPlayer');\n    if (audioElement) {\n      audioElement.addEventListener('ended', handleAudioEnded);\n\n      // Clean up the event listener when the component unmounts\n      return () => {\n        audioElement.removeEventListener('ended', handleAudioEnded);\n      };\n    }\n  }, [handleAudioEnded]);\n  if (!album) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: album.albumTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Artist: \", album.artist]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Release Date: \", album.releaseDate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Record Label: \", album.recordLabel]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `images/${album.albumCoverArt}`,\n      alt: album.albumTitle,\n      style: {\n        maxWidth: '200px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      id: \"audioPlayer\",\n      controls: true,\n      children: /*#__PURE__*/_jsxDEV(\"source\", {\n        src: album.tracklist[currentTrackIndex].audioUrl,\n        type: \"audio/mpeg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Tracks:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: album.tracklist.map((track, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleSongClick(track, index),\n        children: [track.name, \" - \", track.duration]\n      }, track._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: playNextTrack,\n      children: \"Play Next Track\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(AlbumDetails, \"VMLrYH261fzD49XGs+XJcLj2wNo=\", false, function () {\n  return [useParams];\n});\n_c = AlbumDetails;\nexport default AlbumDetails;\nvar _c;\n$RefreshReg$(_c, \"AlbumDetails\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","AlbumDetails","setSelectedSong","_s","albumId","album","setAlbum","currentTrackIndex","setCurrentTrackIndex","fetch","then","response","ok","Error","status","json","data","catch","error","console","handleSongClick","track","index","playNextTrack","nextIndex","tracklist","length","handleAudioEnded","audioElement","document","getElementById","addEventListener","removeEventListener","children","fileName","_jsxFileName","lineNumber","columnNumber","albumTitle","artist","releaseDate","recordLabel","src","albumCoverArt","alt","style","maxWidth","id","controls","audioUrl","type","map","onClick","name","duration","_id","_c","$RefreshReg$"],"sources":["C:/Users/roshi/Desktop/college/internship/webdev/project/try/client/src/AlbumDetails.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst AlbumDetails = ({ setSelectedSong }) => {\r\n  const { albumId } = useParams();\r\n  const [album, setAlbum] = useState(null);\r\n  const [currentTrackIndex, setCurrentTrackIndex] = useState(0);\r\n\r\n  useEffect(() => {\r\n    fetch(`http://localhost:3002/api/albums/${albumId}`)\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! Status: ${response.status}`);\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(data => setAlbum(data))\r\n      .catch(error => console.error(error));\r\n  }, [albumId]);\r\n\r\n  const handleSongClick = (track, index) => {\r\n    setSelectedSong(track);\r\n    setCurrentTrackIndex(index);\r\n  };\r\n\r\n  const playNextTrack = () => {\r\n    const nextIndex = (currentTrackIndex + 1) % album.tracklist.length;\r\n    setSelectedSong(album.tracklist[nextIndex]);\r\n    setCurrentTrackIndex(nextIndex);\r\n  };\r\n\r\n  const handleAudioEnded = () => {\r\n    // Play the next track when the current one ends\r\n    playNextTrack();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const audioElement = document.getElementById('audioPlayer');\r\n    if (audioElement) {\r\n      audioElement.addEventListener('ended', handleAudioEnded);\r\n\r\n      // Clean up the event listener when the component unmounts\r\n      return () => {\r\n        audioElement.removeEventListener('ended', handleAudioEnded);\r\n      };\r\n    }\r\n  }, [handleAudioEnded]);\r\n\r\n  if (!album) {\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>{album.albumTitle}</h2>\r\n      <p>Artist: {album.artist}</p>\r\n      <p>Release Date: {album.releaseDate}</p>\r\n      <p>Record Label: {album.recordLabel}</p>\r\n      <img src={`images/${album.albumCoverArt}`} alt={album.albumTitle} style={{ maxWidth: '200px' }} />\r\n\r\n      <audio id=\"audioPlayer\" controls>\r\n        <source src={album.tracklist[currentTrackIndex].audioUrl} type=\"audio/mpeg\" />\r\n      </audio>\r\n\r\n      <h3>Tracks:</h3>\r\n      <ul>\r\n        {album.tracklist.map((track, index) => (\r\n          <li key={track._id} onClick={() => handleSongClick(track, index)}>\r\n            {track.name} - {track.duration}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      <button onClick={playNextTrack}>Play Next Track</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AlbumDetails;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}