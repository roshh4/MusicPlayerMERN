{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\roshi\\\\Desktop\\\\college\\\\internship\\\\webdev\\\\project\\\\try\\\\client\\\\src\\\\PlaySong.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PlaySong({\n  selectedSong\n}) {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const handlePlayPause = () => {\n    setIsPlaying(!isPlaying);\n    // You can implement the actual logic for playing and pausing the selected song here\n    // For simplicity, I'm just logging the play/pause action\n    console.log(`${isPlaying ? 'Pausing' : 'Playing'}: ${selectedSong.name}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: selectedSong ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Now Playing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Song: \", selectedSong.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Artist: \", selectedSong.artist]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Album: \", selectedSong.album]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Duration: \", selectedSong.duration]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePlayPause,\n        children: isPlaying ? 'Pause' : 'Play'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No song selected\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(PlaySong, \"dxr5RgzQJlMZkbQdHY9iHZ+FF0w=\");\n_c = PlaySong;\nexport default PlaySong;\nvar _c;\n$RefreshReg$(_c, \"PlaySong\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PlaySong","selectedSong","_s","isPlaying","setIsPlaying","handlePlayPause","console","log","name","children","fileName","_jsxFileName","lineNumber","columnNumber","artist","album","duration","onClick","_c","$RefreshReg$"],"sources":["C:/Users/roshi/Desktop/college/internship/webdev/project/try/client/src/PlaySong.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction PlaySong({ selectedSong }) {\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n\r\n  const handlePlayPause = () => {\r\n    setIsPlaying(!isPlaying);\r\n    // You can implement the actual logic for playing and pausing the selected song here\r\n    // For simplicity, I'm just logging the play/pause action\r\n    console.log(`${isPlaying ? 'Pausing' : 'Playing'}: ${selectedSong.name}`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {selectedSong ? (\r\n        <div>\r\n          <h2>Now Playing</h2>\r\n          <p>Song: {selectedSong.name}</p>\r\n          <p>Artist: {selectedSong.artist}</p>\r\n          <p>Album: {selectedSong.album}</p>\r\n          <p>Duration: {selectedSong.duration}</p>\r\n          <button onClick={handlePlayPause}>{isPlaying ? 'Pause' : 'Play'}</button>\r\n        </div>\r\n      ) : (\r\n        <p>No song selected</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlaySong;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,QAAQA,CAAC;EAAEC;AAAa,CAAC,EAAE;EAAAC,EAAA;EAClC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMQ,eAAe,GAAGA,CAAA,KAAM;IAC5BD,YAAY,CAAC,CAACD,SAAS,CAAC;IACxB;IACA;IACAG,OAAO,CAACC,GAAG,CAAE,GAAEJ,SAAS,GAAG,SAAS,GAAG,SAAU,KAAIF,YAAY,CAACO,IAAK,EAAC,CAAC;EAC3E,CAAC;EAED,oBACET,OAAA;IAAAU,QAAA,EACGR,YAAY,gBACXF,OAAA;MAAAU,QAAA,gBACEV,OAAA;QAAAU,QAAA,EAAI;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpBd,OAAA;QAAAU,QAAA,GAAG,QAAM,EAACR,YAAY,CAACO,IAAI;MAAA;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChCd,OAAA;QAAAU,QAAA,GAAG,UAAQ,EAACR,YAAY,CAACa,MAAM;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpCd,OAAA;QAAAU,QAAA,GAAG,SAAO,EAACR,YAAY,CAACc,KAAK;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClCd,OAAA;QAAAU,QAAA,GAAG,YAAU,EAACR,YAAY,CAACe,QAAQ;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxCd,OAAA;QAAQkB,OAAO,EAAEZ,eAAgB;QAAAI,QAAA,EAAEN,SAAS,GAAG,OAAO,GAAG;MAAM;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtE,CAAC,gBAENd,OAAA;MAAAU,QAAA,EAAG;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACvB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACX,EAAA,CA1BQF,QAAQ;AAAAkB,EAAA,GAARlB,QAAQ;AA4BjB,eAAeA,QAAQ;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}