{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\roshi\\\\Desktop\\\\college\\\\internship\\\\webdev\\\\project\\\\try\\\\client\\\\src\\\\footer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Footer({\n  selectedSong\n}) {\n  _s();\n  const [audioUrl, setAudioUrl] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [volume, setVolume] = useState(1); // Default volume is 1 (100%)\n  const audioRef = useRef(null);\n  useEffect(() => {\n    const fetchMediaData = async () => {\n      try {\n        console.log('Fetching audio and image URLs for:', selectedSong.name);\n        const audioResponse = await fetch(`http://localhost:3002/api/getAudioUrl/${encodeURIComponent(selectedSong.name)}`);\n        if (!audioResponse.ok) {\n          throw new Error(`Failed to fetch audio URL: ${audioResponse.status} ${audioResponse.statusText}`);\n        }\n        const audioData = await audioResponse.json();\n        console.log('Fetched audio data:', audioData);\n        setAudioUrl(audioData.audioUrl);\n        const imageResponse = await fetch(`http://localhost:3002/api/getImageUrl/${encodeURIComponent(selectedSong.name)}`);\n        if (!imageResponse.ok) {\n          throw new Error(`Failed to fetch image URL: ${imageResponse.status} ${imageResponse.statusText}`);\n        }\n        const imageData = await imageResponse.json();\n        console.log('Fetched image data:', imageData);\n        setImageUrl(imageData.imageUrl);\n\n        // Add the recently played song to the collection\n        await axios.post('http://localhost:3002/api/recentlyPlayed', {\n          songId: selectedSong._id,\n          createdAT: new Date()\n        });\n      } catch (error) {\n        console.error('Error fetching media data:', error);\n      }\n    };\n    if (selectedSong) {\n      fetchMediaData();\n    }\n  }, [selectedSong]);\n  const handlePlayPause = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n    } else {\n      audioRef.current.play();\n    }\n    setIsPlaying(!isPlaying);\n  };\n  const handleVolumeChange = event => {\n    const newVolume = parseFloat(event.target.value);\n    setVolume(newVolume);\n    audioRef.current.volume = newVolume;\n  };\n  const fakeAudioUrl = 'https://example.com/fake-audio.mp3';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: selectedSong ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: audioUrl ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePlayPause,\n          children: isPlaying ? 'Pause' : 'Play'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"0\",\n          max: \"1\",\n          step: \"0.1\",\n          value: volume,\n          onChange: handleVolumeChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n          ref: audioRef,\n          volume: volume,\n          children: /*#__PURE__*/_jsxDEV(\"source\", {\n            src: audioUrl,\n            type: \"audio/flac\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this), imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imageUrl,\n          alt: \"Song Artwork\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading audio...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"loading audio\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fake-audio-player\",\n        children: /*#__PURE__*/_jsxDEV(\"audio\", {\n          controls: true,\n          children: /*#__PURE__*/_jsxDEV(\"source\", {\n            src: fakeAudioUrl,\n            type: \"audio/flac\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(Footer, \"jyj9Nkiya53lhXjOiqjCWnOaJWU=\");\n_c = Footer;\nexport default Footer;\nvar _c;\n$RefreshReg$(_c, \"Footer\");","map":{"version":3,"names":["React","useEffect","useState","useRef","axios","jsxDEV","_jsxDEV","Footer","selectedSong","_s","audioUrl","setAudioUrl","imageUrl","setImageUrl","isPlaying","setIsPlaying","volume","setVolume","audioRef","fetchMediaData","console","log","name","audioResponse","fetch","encodeURIComponent","ok","Error","status","statusText","audioData","json","imageResponse","imageData","post","songId","_id","createdAT","Date","error","handlePlayPause","current","pause","play","handleVolumeChange","event","newVolume","parseFloat","target","value","fakeAudioUrl","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","min","max","step","onChange","ref","src","alt","className","controls","_c","$RefreshReg$"],"sources":["C:/Users/roshi/Desktop/college/internship/webdev/project/try/client/src/footer.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Footer({ selectedSong }) {\r\n  const [audioUrl, setAudioUrl] = useState('');\r\n  const [imageUrl, setImageUrl] = useState('');\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [volume, setVolume] = useState(1); // Default volume is 1 (100%)\r\n  const audioRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const fetchMediaData = async () => {\r\n      try {\r\n        console.log('Fetching audio and image URLs for:', selectedSong.name);\r\n\r\n        const audioResponse = await fetch(`http://localhost:3002/api/getAudioUrl/${encodeURIComponent(selectedSong.name)}`);\r\n\r\n        if (!audioResponse.ok) {\r\n          throw new Error(`Failed to fetch audio URL: ${audioResponse.status} ${audioResponse.statusText}`);\r\n        }\r\n\r\n        const audioData = await audioResponse.json();\r\n        console.log('Fetched audio data:', audioData);\r\n        setAudioUrl(audioData.audioUrl);\r\n\r\n        const imageResponse = await fetch(`http://localhost:3002/api/getImageUrl/${encodeURIComponent(selectedSong.name)}`);\r\n\r\n        if (!imageResponse.ok) {\r\n          throw new Error(`Failed to fetch image URL: ${imageResponse.status} ${imageResponse.statusText}`);\r\n        }\r\n\r\n        const imageData = await imageResponse.json();\r\n        console.log('Fetched image data:', imageData);\r\n        setImageUrl(imageData.imageUrl);\r\n\r\n        // Add the recently played song to the collection\r\n        await axios.post('http://localhost:3002/api/recentlyPlayed', {\r\n          songId: selectedSong._id,\r\n          createdAT: new Date(),\r\n        });\r\n      } catch (error) {\r\n        console.error('Error fetching media data:', error);\r\n      }\r\n    };\r\n\r\n    if (selectedSong) {\r\n      fetchMediaData();\r\n    }\r\n  }, [selectedSong]);\r\n\r\n  const handlePlayPause = () => {\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n    } else {\r\n      audioRef.current.play();\r\n    }\r\n    setIsPlaying(!isPlaying);\r\n  };\r\n\r\n  const handleVolumeChange = (event) => {\r\n    const newVolume = parseFloat(event.target.value);\r\n    setVolume(newVolume);\r\n    audioRef.current.volume = newVolume;\r\n  };\r\n\r\n  const fakeAudioUrl = 'https://example.com/fake-audio.mp3';\r\n\r\n  return (\r\n    <div>\r\n      {selectedSong ? (\r\n        <div>\r\n          {audioUrl ? (\r\n            <div>\r\n              <button onClick={handlePlayPause}>\r\n                {isPlaying ? 'Pause' : 'Play'}\r\n              </button>\r\n              <input\r\n                type=\"range\"\r\n                min=\"0\"\r\n                max=\"1\"\r\n                step=\"0.1\"\r\n                value={volume}\r\n                onChange={handleVolumeChange}\r\n              />\r\n              <audio ref={audioRef} volume={volume}>\r\n                <source src={audioUrl} type=\"audio/flac\" />\r\n              </audio>\r\n              {imageUrl && <img src={imageUrl} alt=\"Song Artwork\" />}\r\n            </div>\r\n          ) : (\r\n            <p>Loading audio...</p>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <div>loading audio\r\n          <div className=\"fake-audio-player\">\r\n            <audio controls>\r\n              <source src={fakeAudioUrl} type=\"audio/flac\" />\r\n            </audio>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}