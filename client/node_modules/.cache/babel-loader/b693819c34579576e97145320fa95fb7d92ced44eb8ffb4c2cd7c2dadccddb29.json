{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\roshi\\\\Desktop\\\\college\\\\internship\\\\webdev\\\\project\\\\try\\\\client\\\\src\\\\HomePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport AlbumTile from './AlbumTile';\nimport RecentlyPlayed from './RecentlyPlayed.js';\nimport './HomePage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Homepage = ({\n  setSelectedSong\n}) => {\n  _s();\n  const [greeting, setGreeting] = useState('');\n  useEffect(() => {\n    // Get the current hour\n    const currentHour = new Date().getHours();\n\n    // Set the greeting based on the time of day\n    if (currentHour >= 5 && currentHour < 12) {\n      setGreeting('Good morning');\n    } else if (currentHour >= 12 && currentHour < 18) {\n      setGreeting('Good afternoon');\n    } else {\n      setGreeting('Good evening');\n    }\n  }, []); // Empty dependency array to run the effect only once on mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hp\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gr\",\n        children: greeting\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recplay\",\n        children: [\"recently played \", /*#__PURE__*/_jsxDEV(RecentlyPlayed, {\n          setSelectedSong: setSelectedSong\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 50\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"albums\",\n      children: [\"albums\", /*#__PURE__*/_jsxDEV(AlbumTile, {\n        setSelectedSong: setSelectedSong\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Homepage, \"BAhiWAx1+2g7tjPot3UKZq5/fhg=\");\n_c = Homepage;\nexport default Homepage;\nvar _c;\n$RefreshReg$(_c, \"Homepage\");","map":{"version":3,"names":["React","useState","useEffect","AlbumTile","RecentlyPlayed","jsxDEV","_jsxDEV","Homepage","setSelectedSong","_s","greeting","setGreeting","currentHour","Date","getHours","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/roshi/Desktop/college/internship/webdev/project/try/client/src/HomePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport AlbumTile from './AlbumTile';\r\nimport RecentlyPlayed from './RecentlyPlayed.js';\r\nimport './HomePage.css';\r\n\r\nconst Homepage = ({ setSelectedSong }) => {\r\n  const [greeting, setGreeting] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Get the current hour\r\n    const currentHour = new Date().getHours();\r\n\r\n    // Set the greeting based on the time of day\r\n    if (currentHour >= 5 && currentHour < 12) {\r\n      setGreeting('Good morning');\r\n    } else if (currentHour >= 12 && currentHour < 18) {\r\n      setGreeting('Good afternoon');\r\n    } else {\r\n      setGreeting('Good evening');\r\n    }\r\n  }, []); // Empty dependency array to run the effect only once on mount\r\n\r\n  return (\r\n    <div className='hp'>\r\n      <div className='top'>\r\n        <div className='gr'>{greeting}</div>\r\n        <div className='recplay'>recently played <RecentlyPlayed setSelectedSong={setSelectedSong} /></div>\r\n      </div>\r\n      <div className='albums'>albums<AlbumTile setSelectedSong={setSelectedSong} /></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Homepage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,cAAc,MAAM,qBAAqB;AAChD,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMU,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;;IAEzC;IACA,IAAIF,WAAW,IAAI,CAAC,IAAIA,WAAW,GAAG,EAAE,EAAE;MACxCD,WAAW,CAAC,cAAc,CAAC;IAC7B,CAAC,MAAM,IAAIC,WAAW,IAAI,EAAE,IAAIA,WAAW,GAAG,EAAE,EAAE;MAChDD,WAAW,CAAC,gBAAgB,CAAC;IAC/B,CAAC,MAAM;MACLA,WAAW,CAAC,cAAc,CAAC;IAC7B;EACF,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEL,OAAA;IAAKS,SAAS,EAAC,IAAI;IAAAC,QAAA,gBACjBV,OAAA;MAAKS,SAAS,EAAC,KAAK;MAAAC,QAAA,gBAClBV,OAAA;QAAKS,SAAS,EAAC,IAAI;QAAAC,QAAA,EAAEN;MAAQ;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACpCd,OAAA;QAAKS,SAAS,EAAC,SAAS;QAAAC,QAAA,GAAC,kBAAgB,eAAAV,OAAA,CAACF,cAAc;UAACI,eAAe,EAAEA;QAAgB;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChG,CAAC,eACNd,OAAA;MAAKS,SAAS,EAAC,QAAQ;MAAAC,QAAA,GAAC,QAAM,eAAAV,OAAA,CAACH,SAAS;QAACK,eAAe,EAAEA;MAAgB;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChF,CAAC;AAEV,CAAC;AAACX,EAAA,CA1BIF,QAAQ;AAAAc,EAAA,GAARd,QAAQ;AA4Bd,eAAeA,QAAQ;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}