{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\roshi\\\\Desktop\\\\college\\\\internship\\\\webdev\\\\project\\\\try\\\\client\\\\src\\\\Favorites.js\",\n  _s = $RefreshSig$();\n// Favorites.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport OptionsPopup from './OptionsPopup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Favorites({\n  setSelectedSong\n}) {\n  _s();\n  const [likedSongs, setLikedSongs] = useState([]);\n  const [selectedSong, setSelectedSongOption] = useState(null);\n  const [showOptions, setShowOptions] = useState(false);\n  useEffect(() => {\n    const fetchLikedSongs = async () => {\n      try {\n        const response = await axios.get('http://localhost:3002/api/likedSongs');\n        if (response.status === 200) {\n          setLikedSongs(response.data.likedSongs);\n        } else {\n          console.error('Failed to fetch liked songs:', response.status);\n        }\n      } catch (error) {\n        console.error('An error occurred while fetching liked songs:', error);\n      }\n    };\n\n    // Fetch liked songs when the component mounts\n    fetchLikedSongs();\n  }, []);\n  const handleShowOptions = song => {\n    setSelectedSongOption(song);\n    setShowOptions(true);\n  };\n  const handleCloseOptions = () => {\n    setSelectedSongOption(null);\n    setShowOptions(false);\n  };\n  const handleOption1 = playlist => {\n    // Log both the playlist's ID and the selected song's ID\n    console.log('Playlist ID:', playlist._id);\n    console.log('Selected Song ID:', selectedSongOption.songId);\n\n    // Implement your logic for Option 1\n    setShowOptions(false);\n    console.log(\"Option 1 - Display playlists\");\n  };\n  const handleOption2 = async () => {\n    try {\n      // Send a request to add the song to the LikedSongs collection\n      const response = await axios.post('http://localhost:3002/api/likedSongs/addSong', {\n        songId: selectedSongOption.songId\n      });\n      if (response.status === 200) {\n        console.log('Song added to LikedSongs');\n      } else {\n        console.error('Failed to add song to LikedSongs:', response.status);\n      }\n\n      // Close the options popup\n      handleCloseOptions();\n    } catch (error) {\n      console.error('An error occurred while adding song to LikedSongs:', error);\n    }\n  };\n  const handleOption3 = () => {\n    console.log(\"Option 3\");\n    // Implement your logic for Option 3\n    handleCloseOptions();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Favorites\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), likedSongs.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: likedSongs.map(likedSong => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleShowOptions(likedSong),\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this), \" \", likedSong.songId.name, \", \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Artist:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 64\n        }, this), \" \", likedSong.songId.artist, \",\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Album:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this), \" \", likedSong.songId.album]\n      }, likedSong._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No liked songs yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this), selectedSongOption && /*#__PURE__*/_jsxDEV(OptionsPopup, {\n      playlists: [] // Pass appropriate playlists if needed\n      ,\n      showPlaylists: false // Pass appropriate value\n      ,\n      handleOption1: handleOption1,\n      handleOption2: handleOption2,\n      handleOption3: handleOption3,\n      handleCloseOptions: handleCloseOptions,\n      selectedSong: selectedSongOption\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(Favorites, \"vwLQMUBvYTXF0wf7RzWyBjQ24/Q=\");\n_c = Favorites;\nexport default Favorites;\nvar _c;\n$RefreshReg$(_c, \"Favorites\");","map":{"version":3,"names":["React","useState","useEffect","axios","OptionsPopup","jsxDEV","_jsxDEV","Favorites","setSelectedSong","_s","likedSongs","setLikedSongs","selectedSong","setSelectedSongOption","showOptions","setShowOptions","fetchLikedSongs","response","get","status","data","console","error","handleShowOptions","song","handleCloseOptions","handleOption1","playlist","log","_id","selectedSongOption","songId","handleOption2","post","handleOption3","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","likedSong","onClick","name","artist","album","playlists","showPlaylists","_c","$RefreshReg$"],"sources":["C:/Users/roshi/Desktop/college/internship/webdev/project/try/client/src/Favorites.js"],"sourcesContent":["// Favorites.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport OptionsPopup from './OptionsPopup';\r\n\r\nfunction Favorites({ setSelectedSong }) {\r\n  const [likedSongs, setLikedSongs] = useState([]);\r\n  const [selectedSong, setSelectedSongOption] = useState(null);\r\n  const [showOptions, setShowOptions] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchLikedSongs = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:3002/api/likedSongs');\r\n        if (response.status === 200) {\r\n          setLikedSongs(response.data.likedSongs);\r\n        } else {\r\n          console.error('Failed to fetch liked songs:', response.status);\r\n        }\r\n      } catch (error) {\r\n        console.error('An error occurred while fetching liked songs:', error);\r\n      }\r\n    };\r\n\r\n    // Fetch liked songs when the component mounts\r\n    fetchLikedSongs();\r\n  }, []);\r\n\r\n  const handleShowOptions = (song) => {\r\n    setSelectedSongOption(song);\r\n    setShowOptions(true);\r\n  };\r\n\r\n  const handleCloseOptions = () => {\r\n    setSelectedSongOption(null);\r\n    setShowOptions(false);\r\n  };\r\n\r\n  const handleOption1 = (playlist) => {\r\n    // Log both the playlist's ID and the selected song's ID\r\n    console.log('Playlist ID:', playlist._id);\r\n    console.log('Selected Song ID:', selectedSongOption.songId);\r\n  \r\n    // Implement your logic for Option 1\r\n    setShowOptions(false);\r\n    console.log(\"Option 1 - Display playlists\");\r\n  };\r\n\r\n  const handleOption2 = async () => {\r\n    try {\r\n      // Send a request to add the song to the LikedSongs collection\r\n      const response = await axios.post('http://localhost:3002/api/likedSongs/addSong', {\r\n        songId: selectedSongOption.songId,\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        console.log('Song added to LikedSongs');\r\n      } else {\r\n        console.error('Failed to add song to LikedSongs:', response.status);\r\n      }\r\n\r\n      // Close the options popup\r\n      handleCloseOptions();\r\n    } catch (error) {\r\n      console.error('An error occurred while adding song to LikedSongs:', error);\r\n    }\r\n  };\r\n\r\n  const handleOption3 = () => {\r\n    console.log(\"Option 3\");\r\n    // Implement your logic for Option 3\r\n    handleCloseOptions();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Favorites</h2>\r\n      {likedSongs.length > 0 ? (\r\n        <ul>\r\n          {likedSongs.map((likedSong) => (\r\n            <li key={likedSong._id} onClick={() => handleShowOptions(likedSong)}>\r\n              {/* Display song details */}\r\n              <strong>Title:</strong> {likedSong.songId.name}, <strong>Artist:</strong> {likedSong.songId.artist},{' '}\r\n              <strong>Album:</strong> {likedSong.songId.album}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>No liked songs yet.</p>\r\n      )}\r\n\r\n      {/* Options popup for the selected song */}\r\n      {selectedSongOption && (\r\n        <OptionsPopup\r\n          playlists={[]}  // Pass appropriate playlists if needed\r\n          showPlaylists={false}  // Pass appropriate value\r\n          handleOption1={handleOption1}\r\n          handleOption2={handleOption2}\r\n          handleOption3={handleOption3}\r\n          handleCloseOptions={handleCloseOptions}\r\n          selectedSong={selectedSongOption}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Favorites;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,SAASA,CAAC;EAAEC;AAAgB,CAAC,EAAE;EAAAC,EAAA;EACtC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACW,YAAY,EAAEC,qBAAqB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAErDC,SAAS,CAAC,MAAM;IACd,MAAMc,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,sCAAsC,CAAC;QACxE,IAAID,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;UAC3BR,aAAa,CAACM,QAAQ,CAACG,IAAI,CAACV,UAAU,CAAC;QACzC,CAAC,MAAM;UACLW,OAAO,CAACC,KAAK,CAAC,8BAA8B,EAAEL,QAAQ,CAACE,MAAM,CAAC;QAChE;MACF,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAAC;MACvE;IACF,CAAC;;IAED;IACAN,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,iBAAiB,GAAIC,IAAI,IAAK;IAClCX,qBAAqB,CAACW,IAAI,CAAC;IAC3BT,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMU,kBAAkB,GAAGA,CAAA,KAAM;IAC/BZ,qBAAqB,CAAC,IAAI,CAAC;IAC3BE,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,MAAMW,aAAa,GAAIC,QAAQ,IAAK;IAClC;IACAN,OAAO,CAACO,GAAG,CAAC,cAAc,EAAED,QAAQ,CAACE,GAAG,CAAC;IACzCR,OAAO,CAACO,GAAG,CAAC,mBAAmB,EAAEE,kBAAkB,CAACC,MAAM,CAAC;;IAE3D;IACAhB,cAAc,CAAC,KAAK,CAAC;IACrBM,OAAO,CAACO,GAAG,CAAC,8BAA8B,CAAC;EAC7C,CAAC;EAED,MAAMI,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF;MACA,MAAMf,QAAQ,GAAG,MAAMd,KAAK,CAAC8B,IAAI,CAAC,8CAA8C,EAAE;QAChFF,MAAM,EAAED,kBAAkB,CAACC;MAC7B,CAAC,CAAC;MAEF,IAAId,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;QAC3BE,OAAO,CAACO,GAAG,CAAC,0BAA0B,CAAC;MACzC,CAAC,MAAM;QACLP,OAAO,CAACC,KAAK,CAAC,mCAAmC,EAAEL,QAAQ,CAACE,MAAM,CAAC;MACrE;;MAEA;MACAM,kBAAkB,CAAC,CAAC;IACtB,CAAC,CAAC,OAAOH,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,oDAAoD,EAAEA,KAAK,CAAC;IAC5E;EACF,CAAC;EAED,MAAMY,aAAa,GAAGA,CAAA,KAAM;IAC1Bb,OAAO,CAACO,GAAG,CAAC,UAAU,CAAC;IACvB;IACAH,kBAAkB,CAAC,CAAC;EACtB,CAAC;EAED,oBACEnB,OAAA;IAAA6B,QAAA,gBACE7B,OAAA;MAAA6B,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjB7B,UAAU,CAAC8B,MAAM,GAAG,CAAC,gBACpBlC,OAAA;MAAA6B,QAAA,EACGzB,UAAU,CAAC+B,GAAG,CAAEC,SAAS,iBACxBpC,OAAA;QAAwBqC,OAAO,EAAEA,CAAA,KAAMpB,iBAAiB,CAACmB,SAAS,CAAE;QAAAP,QAAA,gBAElE7B,OAAA;UAAA6B,QAAA,EAAQ;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACG,SAAS,CAACX,MAAM,CAACa,IAAI,EAAC,IAAE,eAAAtC,OAAA;UAAA6B,QAAA,EAAQ;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACG,SAAS,CAACX,MAAM,CAACc,MAAM,EAAC,GAAC,EAAC,GAAG,eACxGvC,OAAA;UAAA6B,QAAA,EAAQ;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACG,SAAS,CAACX,MAAM,CAACe,KAAK;MAAA,GAHxCJ,SAAS,CAACb,GAAG;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIlB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,gBAELjC,OAAA;MAAA6B,QAAA,EAAG;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC1B,EAGAT,kBAAkB,iBACjBxB,OAAA,CAACF,YAAY;MACX2C,SAAS,EAAE,EAAG,CAAE;MAAA;MAChBC,aAAa,EAAE,KAAM,CAAE;MAAA;MACvBtB,aAAa,EAAEA,aAAc;MAC7BM,aAAa,EAAEA,aAAc;MAC7BE,aAAa,EAAEA,aAAc;MAC7BT,kBAAkB,EAAEA,kBAAmB;MACvCb,YAAY,EAAEkB;IAAmB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC9B,EAAA,CApGQF,SAAS;AAAA0C,EAAA,GAAT1C,SAAS;AAsGlB,eAAeA,SAAS;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}