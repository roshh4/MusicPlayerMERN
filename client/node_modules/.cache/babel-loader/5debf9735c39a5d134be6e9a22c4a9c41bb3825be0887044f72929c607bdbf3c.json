{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\roshi\\\\Desktop\\\\college\\\\internship\\\\webdev\\\\project\\\\try\\\\client\\\\src\\\\DisplaySongs.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport PlaySong from './PlaySong';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DisplaySongsList({\n  onSongClick\n}) {\n  _s();\n  const [songs, setSongs] = useState([]);\n  const [selectedSong, setSelectedSong] = useState(null);\n  useEffect(() => {\n    const fetchSongs = async () => {\n      try {\n        const response = await fetch('http://localhost:3002/api/getAllSongs');\n        const data = await response.json();\n        setSongs(data);\n      } catch (error) {\n        console.error('Error fetching songs:', error);\n      }\n    };\n    fetchSongs();\n  }, []);\n  const handleSongClick = song => {\n    setSelectedSong(song);\n    onSongClick(song);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"All Songs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), songs.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Song\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Artist\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Album\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Duration\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: songs.map(song => /*#__PURE__*/_jsxDEV(\"tr\", {\n            onClick: () => handleSongClick(song),\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: song.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: song.artist\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: song.album\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: song.duration\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 19\n            }, this)]\n          }, song._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PlaySong, {\n        selectedSong: selectedSong\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading songs...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(DisplaySongsList, \"Ip+hoT6dmx2sLvNkW23wKPJ5oYE=\");\n_c = DisplaySongsList;\nexport default DisplaySongsList;\nvar _c;\n$RefreshReg$(_c, \"DisplaySongsList\");","map":{"version":3,"names":["React","useEffect","useState","PlaySong","jsxDEV","_jsxDEV","DisplaySongsList","onSongClick","_s","songs","setSongs","selectedSong","setSelectedSong","fetchSongs","response","fetch","data","json","error","console","handleSongClick","song","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","onClick","name","artist","album","duration","_id","_c","$RefreshReg$"],"sources":["C:/Users/roshi/Desktop/college/internship/webdev/project/try/client/src/DisplaySongs.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport PlaySong from './PlaySong';\r\n\r\nfunction DisplaySongsList({ onSongClick }) {\r\n  const [songs, setSongs] = useState([]);\r\n  const [selectedSong, setSelectedSong] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchSongs = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:3002/api/getAllSongs');\r\n        const data = await response.json();\r\n        setSongs(data);\r\n      } catch (error) {\r\n        console.error('Error fetching songs:', error);\r\n      }\r\n    };\r\n\r\n    fetchSongs();\r\n  }, []);\r\n\r\n  const handleSongClick = (song) => {\r\n    setSelectedSong(song);\r\n    onSongClick(song);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>All Songs</h2>\r\n      {songs.length > 0 ? (\r\n        <div>\r\n          {/* Display Songs */}\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Song</th>\r\n                <th>Artist</th>\r\n                <th>Album</th>\r\n                <th>Duration</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {songs.map((song) => (\r\n                <tr key={song._id} onClick={() => handleSongClick(song)}>\r\n                  <td>{song.name}</td>\r\n                  <td>{song.artist}</td>\r\n                  <td>{song.album}</td>\r\n                  <td>{song.duration}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n          \r\n          {/* Play Song */}\r\n          <PlaySong selectedSong={selectedSong} />\r\n        </div>\r\n      ) : (\r\n        <p>Loading songs...</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DisplaySongsList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}