{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\roshi\\\\Desktop\\\\college\\\\internship\\\\webdev\\\\project\\\\try\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import './App.css';\n// import { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\n// import Homepage from './HomePage'; \n// import AlbumDetails from './AlbumDetails'; \n// import Footer from './footer';\n// import Sidebar from './sidebar';\n// import SearchPage from './SearchPage';\n// import PlaylistDetails from './PlaylistDetails';\n// import Favorites from './Favorites'; \n\n// function App() {\n//   const [selectedSong, setSelectedSong] = useState(null);\n\n//   return (\n//     <Router>\n//       <div className=\"App\">\n//         <div className=\"container\">\n//           <Sidebar className=\"sidebar\" />\n//           <div className=\"content\">\n//             <Routes>\n//               <Route\n//                 path=\"/\"\n//                 element={<Homepage setSelectedSong={setSelectedSong}/>}\n//               />\n//               <Route\n//                 path=\"/album/:albumId\"\n//                 element={<AlbumDetails setSelectedSong={setSelectedSong} />}\n//               />\n//               <Route\n//                 path=\"/search\"\n//                 element={<SearchPage playSong={setSelectedSong} />}\n//               />\n//               <Route\n//                 path=\"/playlist/:playlistId\"\n//                 element={<PlaylistDetails setSelectedSong={setSelectedSong} />}\n//               />\n//               {/* Add the route for the Favorites page */}\n//               <Route\n//                 path=\"/favorites\"\n//                 element={<Favorites setSelectedSong={setSelectedSong} />}\n//               />\n//               {/* <Route\n//                 path=\"/\"\n//                 element={<RecentlyPlayed setSelectedSong={setSelectedSong} />}\n//               /> */}\n//             </Routes>\n//           </div>\n//         </div>\n//         <footer className=\"footer\">\n//           {selectedSong && <Footer selectedSong={selectedSong} />}\n//         </footer>\n//       </div>\n//     </Router>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const audioRef = useRef(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [volume, setVolume] = useState(1);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  useEffect(() => {\n    const audio = audioRef.current;\n    audio.addEventListener('play', () => setIsPlaying(true));\n    audio.addEventListener('pause', () => setIsPlaying(false));\n    audio.addEventListener('timeupdate', () => setCurrentTime(audio.currentTime));\n    audio.addEventListener('durationchange', () => setDuration(audio.duration));\n    return () => {\n      audio.removeEventListener('play', () => setIsPlaying(true));\n      audio.removeEventListener('pause', () => setIsPlaying(false));\n      audio.removeEventListener('timeupdate', () => setCurrentTime(audio.currentTime));\n      audio.removeEventListener('durationchange', () => setDuration(audio.duration));\n    };\n  }, []);\n  const togglePlayPause = () => {\n    const audio = audioRef.current;\n    if (audio.paused) {\n      audio.play();\n    } else {\n      audio.pause();\n    }\n  };\n  const handleVolumeChange = event => {\n    const audio = audioRef.current;\n    setVolume(event.target.value);\n    audio.volume = event.target.value;\n  };\n  const calculateProgress = () => {\n    return currentTime / duration * 100;\n  };\n  const handleTouchMove = event => {\n    const audio = audioRef.current;\n    const touch = event.touches[0];\n    const touchX = touch.pageX - event.target.getBoundingClientRect().left;\n    const progressBarWidth = event.target.clientWidth;\n    const progress = touchX / progressBarWidth * 100;\n    audio.currentTime = progress / 100 * duration;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"audio-player-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      src: \"audio/01-fka_twigs-thousand_eyes.flac\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"customControls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: togglePlayPause,\n        children: isPlaying ? 'Pause' : 'Play'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"0\",\n        max: \"1\",\n        step: \"0.1\",\n        value: volume,\n        onChange: handleVolumeChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n        value: calculateProgress(),\n        max: \"100\",\n        onTouchMove: handleTouchMove\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Current Time: \", currentTime.toFixed(2), \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Duration: \", duration.toFixed(2), \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"7sFyw+OIt3D7e/rT3Ylb7XKUrf0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","App","_s","audioRef","isPlaying","setIsPlaying","volume","setVolume","currentTime","setCurrentTime","duration","setDuration","audio","current","addEventListener","removeEventListener","togglePlayPause","paused","play","pause","handleVolumeChange","event","target","value","calculateProgress","handleTouchMove","touch","touches","touchX","pageX","getBoundingClientRect","left","progressBarWidth","clientWidth","progress","className","children","ref","src","fileName","_jsxFileName","lineNumber","columnNumber","id","onClick","type","min","max","step","onChange","onTouchMove","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/roshi/Desktop/college/internship/webdev/project/try/client/src/App.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import './App.css';\n// import { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\n// import Homepage from './HomePage'; \n// import AlbumDetails from './AlbumDetails'; \n// import Footer from './footer';\n// import Sidebar from './sidebar';\n// import SearchPage from './SearchPage';\n// import PlaylistDetails from './PlaylistDetails';\n// import Favorites from './Favorites'; \n\n// function App() {\n//   const [selectedSong, setSelectedSong] = useState(null);\n\n//   return (\n//     <Router>\n//       <div className=\"App\">\n//         <div className=\"container\">\n//           <Sidebar className=\"sidebar\" />\n//           <div className=\"content\">\n//             <Routes>\n//               <Route\n//                 path=\"/\"\n//                 element={<Homepage setSelectedSong={setSelectedSong}/>}\n//               />\n//               <Route\n//                 path=\"/album/:albumId\"\n//                 element={<AlbumDetails setSelectedSong={setSelectedSong} />}\n//               />\n//               <Route\n//                 path=\"/search\"\n//                 element={<SearchPage playSong={setSelectedSong} />}\n//               />\n//               <Route\n//                 path=\"/playlist/:playlistId\"\n//                 element={<PlaylistDetails setSelectedSong={setSelectedSong} />}\n//               />\n//               {/* Add the route for the Favorites page */}\n//               <Route\n//                 path=\"/favorites\"\n//                 element={<Favorites setSelectedSong={setSelectedSong} />}\n//               />\n//               {/* <Route\n//                 path=\"/\"\n//                 element={<RecentlyPlayed setSelectedSong={setSelectedSong} />}\n//               /> */}\n//             </Routes>\n//           </div>\n//         </div>\n//         <footer className=\"footer\">\n//           {selectedSong && <Footer selectedSong={selectedSong} />}\n//         </footer>\n//       </div>\n//     </Router>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\n\nconst App = () => {\n  const audioRef = useRef(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [volume, setVolume] = useState(1);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n\n  useEffect(() => {\n    const audio = audioRef.current;\n\n    audio.addEventListener('play', () => setIsPlaying(true));\n    audio.addEventListener('pause', () => setIsPlaying(false));\n    audio.addEventListener('timeupdate', () => setCurrentTime(audio.currentTime));\n    audio.addEventListener('durationchange', () => setDuration(audio.duration));\n\n    return () => {\n      audio.removeEventListener('play', () => setIsPlaying(true));\n      audio.removeEventListener('pause', () => setIsPlaying(false));\n      audio.removeEventListener('timeupdate', () => setCurrentTime(audio.currentTime));\n      audio.removeEventListener('durationchange', () => setDuration(audio.duration));\n    };\n  }, []);\n\n  const togglePlayPause = () => {\n    const audio = audioRef.current;\n    if (audio.paused) {\n      audio.play();\n    } else {\n      audio.pause();\n    }\n  };\n\n  const handleVolumeChange = (event) => {\n    const audio = audioRef.current;\n    setVolume(event.target.value);\n    audio.volume = event.target.value;\n  };\n\n  const calculateProgress = () => {\n    return (currentTime / duration) * 100;\n  };\n\n  const handleTouchMove = (event) => {\n    const audio = audioRef.current;\n    const touch = event.touches[0];\n    const touchX = touch.pageX - event.target.getBoundingClientRect().left;\n    const progressBarWidth = event.target.clientWidth;\n    const progress = (touchX / progressBarWidth) * 100;\n\n    audio.currentTime = (progress / 100) * duration;\n  };\n\n  return (\n    <div className=\"audio-player-container\">\n      <audio ref={audioRef} src=\"audio/01-fka_twigs-thousand_eyes.flac\"></audio>\n\n      <div id=\"customControls\">\n        <button onClick={togglePlayPause}>\n          {isPlaying ? 'Pause' : 'Play'}\n        </button>\n        <input\n          type=\"range\"\n          min=\"0\"\n          max=\"1\"\n          step=\"0.1\"\n          value={volume}\n          onChange={handleVolumeChange}\n        />\n        <progress\n          value={calculateProgress()}\n          max=\"100\"\n          onTouchMove={handleTouchMove}\n        ></progress>\n        <div className=\"progress-details\">\n          <span>Current Time: {currentTime.toFixed(2)}s</span>\n          <span>Duration: {duration.toFixed(2)}s</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}