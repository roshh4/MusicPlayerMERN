{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\roshi\\\\Desktop\\\\college\\\\internship\\\\webdev\\\\project\\\\try\\\\client\\\\src\\\\AlbumDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AlbumDetails = ({\n  setSelectedSong\n}) => {\n  _s();\n  const {\n    albumId\n  } = useParams();\n  const [album, setAlbum] = useState(null);\n  const [currentTrackIndex, setCurrentTrackIndex] = useState(0);\n  const playNextTrack = () => {\n    const nextIndex = (currentTrackIndex + 1) % album.tracklist.length;\n    setSelectedSong(album.tracklist[nextIndex]);\n    setCurrentTrackIndex(nextIndex);\n  };\n  useEffect(() => {\n    const fetchAlbum = async () => {\n      try {\n        const response = await fetch(`http://localhost:3002/api/albums/${albumId}`);\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const data = await response.json();\n        setAlbum(data);\n      } catch (error) {\n        console.error('Error fetching album:', error);\n      }\n    };\n    fetchAlbum();\n  }, [albumId]);\n  useEffect(() => {\n    const audioElement = document.getElementById('audioPlayer');\n    const handleAudioEnded = () => {\n      // Play the next track when the current one ends\n      playNextTrack();\n    };\n    if (audioElement) {\n      audioElement.addEventListener('ended', handleAudioEnded);\n    }\n    return () => {\n      // Remove the event listener when the component unmounts\n      if (audioElement) {\n        audioElement.removeEventListener('ended', handleAudioEnded);\n      }\n    };\n  }, [currentTrackIndex, playNextTrack]);\n  const handleSongClick = (track, index) => {\n    setSelectedSong(track);\n    setCurrentTrackIndex(index);\n  };\n  if (!album) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: album.albumTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Artist: \", album.artist]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Release Date: \", album.releaseDate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Record Label: \", album.recordLabel]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `images/${album.albumCoverArt}`,\n      alt: album.albumTitle,\n      style: {\n        maxWidth: '200px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      id: \"audioPlayer\",\n      controls: true,\n      children: /*#__PURE__*/_jsxDEV(\"source\", {\n        src: album.tracklist[currentTrackIndex].audioUrl,\n        type: \"audio/mpeg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Tracks:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: album.tracklist.map((track, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleSongClick(track, index),\n        children: [track.name, \" - \", track.duration]\n      }, track._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(AlbumDetails, \"VMLrYH261fzD49XGs+XJcLj2wNo=\", false, function () {\n  return [useParams];\n});\n_c = AlbumDetails;\nexport default AlbumDetails;\nvar _c;\n$RefreshReg$(_c, \"AlbumDetails\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","AlbumDetails","setSelectedSong","_s","albumId","album","setAlbum","currentTrackIndex","setCurrentTrackIndex","playNextTrack","nextIndex","tracklist","length","fetchAlbum","response","fetch","ok","Error","status","data","json","error","console","audioElement","document","getElementById","handleAudioEnded","addEventListener","removeEventListener","handleSongClick","track","index","children","fileName","_jsxFileName","lineNumber","columnNumber","albumTitle","artist","releaseDate","recordLabel","src","albumCoverArt","alt","style","maxWidth","id","controls","audioUrl","type","map","onClick","name","duration","_id","_c","$RefreshReg$"],"sources":["C:/Users/roshi/Desktop/college/internship/webdev/project/try/client/src/AlbumDetails.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst AlbumDetails = ({ setSelectedSong }) => {\r\n  const { albumId } = useParams();\r\n  const [album, setAlbum] = useState(null);\r\n  const [currentTrackIndex, setCurrentTrackIndex] = useState(0);\r\n\r\n  const playNextTrack = () => {\r\n    const nextIndex = (currentTrackIndex + 1) % album.tracklist.length;\r\n    setSelectedSong(album.tracklist[nextIndex]);\r\n    setCurrentTrackIndex(nextIndex);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchAlbum = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:3002/api/albums/${albumId}`);\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! Status: ${response.status}`);\r\n        }\r\n        const data = await response.json();\r\n        setAlbum(data);\r\n      } catch (error) {\r\n        console.error('Error fetching album:', error);\r\n      }\r\n    };\r\n\r\n    fetchAlbum();\r\n  }, [albumId]);\r\n\r\n  useEffect(() => {\r\n    const audioElement = document.getElementById('audioPlayer');\r\n\r\n    const handleAudioEnded = () => {\r\n      // Play the next track when the current one ends\r\n      playNextTrack();\r\n    };\r\n\r\n    if (audioElement) {\r\n      audioElement.addEventListener('ended', handleAudioEnded);\r\n    }\r\n\r\n    return () => {\r\n      // Remove the event listener when the component unmounts\r\n      if (audioElement) {\r\n        audioElement.removeEventListener('ended', handleAudioEnded);\r\n      }\r\n    };\r\n  }, [currentTrackIndex, playNextTrack]);\r\n\r\n  const handleSongClick = (track, index) => {\r\n    setSelectedSong(track);\r\n    setCurrentTrackIndex(index);\r\n  };\r\n\r\n  if (!album) {\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>{album.albumTitle}</h2>\r\n      <p>Artist: {album.artist}</p>\r\n      <p>Release Date: {album.releaseDate}</p>\r\n      <p>Record Label: {album.recordLabel}</p>\r\n      <img src={`images/${album.albumCoverArt}`} alt={album.albumTitle} style={{ maxWidth: '200px' }} />\r\n\r\n      <audio id=\"audioPlayer\" controls>\r\n        <source src={album.tracklist[currentTrackIndex].audioUrl} type=\"audio/mpeg\" />\r\n      </audio>\r\n\r\n      <h3>Tracks:</h3>\r\n      <ul>\r\n        {album.tracklist.map((track, index) => (\r\n          <li key={track._id} onClick={() => handleSongClick(track, index)}>\r\n            {track.name} - {track.duration}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AlbumDetails;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}