{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\roshi\\\\Desktop\\\\college\\\\internship\\\\webdev\\\\project\\\\try\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// SearchPage.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './SearchPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SearchPage({\n  playSong\n}) {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [songResults, setSongResults] = useState([]);\n  const [selectedSong, setSelectedSong] = useState(null);\n  const [playlists, setPlaylists] = useState([]);\n  const [showOptions, setShowOptions] = useState(false);\n  const [showPlaylistPopup, setShowPlaylistPopup] = useState(false);\n  const [isPlaying, setIsPlaying] = useState(false);\n  useEffect(() => {\n    const debounce = (func, delay) => {\n      let timeoutId;\n      return function (...args) {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n        timeoutId = setTimeout(() => {\n          func(...args);\n        }, delay);\n      };\n    };\n    const debouncedSearch = debounce(async term => {\n      if (term.trim() === '') {\n        setSongResults([]);\n        return;\n      }\n      try {\n        const response = await fetch(`http://localhost:3002/api/search?q=${encodeURIComponent(term)}`);\n        const data = await response.json();\n        setSongResults(data.filter(item => item.type === 'song'));\n      } catch (error) {\n        console.error(error);\n      }\n    }, 300);\n    debouncedSearch(searchTerm);\n  }, [searchTerm]);\n\n  // Fetch the playlists from MongoDB when the component mounts\n  useEffect(() => {\n    const fetchPlaylists = async () => {\n      try {\n        const response = await axios.get('http://localhost:3002/api/playlists');\n        if (response.status === 200) {\n          setPlaylists(response.data.playlists);\n        }\n      } catch (error) {\n        console.error('An error occurred:', error);\n      }\n    };\n    fetchPlaylists();\n  }, []);\n\n  // Handler to show options for a selected song\n  const handleShowOptions = song => {\n    setSelectedSong(song);\n    setShowOptions(true);\n  };\n\n  // Handler to close the options section\n  const handleCloseOptions = () => {\n    setSelectedSong(null);\n    setShowOptions(false);\n    setIsPlaying(false); // Stop playback when options are closed\n  };\n\n  // Handler to play/pause the selected song\n  const handlePlayPause = () => {\n    setIsPlaying(!isPlaying);\n    // Invoke the playSong callback in App to update the selected song\n    playSong(selectedSong);\n  };\n\n  // Handler to show the playlist popup\n  const handleShowPlaylistPopup = () => {\n    setShowPlaylistPopup(true);\n  };\n\n  // Handler to close the playlist popup\n  const handleClosePlaylistPopup = () => {\n    setShowPlaylistPopup(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Music Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search for songs\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: songResults.map(song => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: song.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: song.artist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleShowOptions(song),\n          children: \"More Options\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePlayPause,\n          children: isPlaying ? 'Pause' : 'Play'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), showOptions && selectedSong && selectedSong.id === song.id && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleShowPlaylistPopup,\n            children: \"Option 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => console.log(\"Option 2\"),\n            children: \"Option 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => console.log(\"Option 3\"),\n            children: \"Option 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCloseOptions,\n            children: \"Close Options\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this)]\n      }, song.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), showPlaylistPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playlist-popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"All Playlists\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: playlists.map(playlist => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: playlist.name\n        }, playlist.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClosePlaylistPopup,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(SearchPage, \"DIwyL+9QuRUf/79r/hMsBW4G0Cs=\");\n_c = SearchPage;\nexport default SearchPage;\nvar _c;\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","SearchPage","playSong","_s","searchTerm","setSearchTerm","songResults","setSongResults","selectedSong","setSelectedSong","playlists","setPlaylists","showOptions","setShowOptions","showPlaylistPopup","setShowPlaylistPopup","isPlaying","setIsPlaying","debounce","func","delay","timeoutId","args","clearTimeout","setTimeout","debouncedSearch","term","trim","response","fetch","encodeURIComponent","data","json","filter","item","type","error","console","fetchPlaylists","get","status","handleShowOptions","song","handleCloseOptions","handlePlayPause","handleShowPlaylistPopup","handleClosePlaylistPopup","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","map","name","artist","onClick","id","log","className","playlist","_c","$RefreshReg$"],"sources":["C:/Users/roshi/Desktop/college/internship/webdev/project/try/client/src/App.js"],"sourcesContent":["// SearchPage.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './SearchPage.css';\n\nfunction SearchPage({ playSong }) {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [songResults, setSongResults] = useState([]);\n  const [selectedSong, setSelectedSong] = useState(null);\n  const [playlists, setPlaylists] = useState([]);\n  const [showOptions, setShowOptions] = useState(false);\n  const [showPlaylistPopup, setShowPlaylistPopup] = useState(false);\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  useEffect(() => {\n    const debounce = (func, delay) => {\n      let timeoutId;\n      return function (...args) {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n        timeoutId = setTimeout(() => {\n          func(...args);\n        }, delay);\n      };\n    };\n\n    const debouncedSearch = debounce(async (term) => {\n      if (term.trim() === '') {\n        setSongResults([]);\n        return;\n      }\n\n      try {\n        const response = await fetch(`http://localhost:3002/api/search?q=${encodeURIComponent(term)}`);\n        const data = await response.json();\n\n        setSongResults(data.filter((item) => item.type === 'song'));\n      } catch (error) {\n        console.error(error);\n      }\n    }, 300);\n\n    debouncedSearch(searchTerm);\n  }, [searchTerm]);\n\n  // Fetch the playlists from MongoDB when the component mounts\n  useEffect(() => {\n    const fetchPlaylists = async () => {\n      try {\n        const response = await axios.get('http://localhost:3002/api/playlists');\n        if (response.status === 200) {\n          setPlaylists(response.data.playlists);\n        }\n      } catch (error) {\n        console.error('An error occurred:', error);\n      }\n    };\n    fetchPlaylists();\n  }, []);\n\n  // Handler to show options for a selected song\n  const handleShowOptions = (song) => {\n    setSelectedSong(song);\n    setShowOptions(true);\n  };\n\n  // Handler to close the options section\n  const handleCloseOptions = () => {\n    setSelectedSong(null);\n    setShowOptions(false);\n    setIsPlaying(false); // Stop playback when options are closed\n  };\n\n  // Handler to play/pause the selected song\n  const handlePlayPause = () => {\n    setIsPlaying(!isPlaying);\n    // Invoke the playSong callback in App to update the selected song\n    playSong(selectedSong);\n  };\n\n  // Handler to show the playlist popup\n  const handleShowPlaylistPopup = () => {\n    setShowPlaylistPopup(true);\n  };\n\n  // Handler to close the playlist popup\n  const handleClosePlaylistPopup = () => {\n    setShowPlaylistPopup(false);\n  };\n\n  return (\n    <div>\n      <h1>Music Search</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Search for songs\"\n        value={searchTerm}\n        onChange={(e) => setSearchTerm(e.target.value)}\n      />\n\n      <div>\n        {/* Display song results */}\n        {songResults.map((song) => (\n          <div key={song.id}>\n            <h3>{song.name}</h3>\n            <p>{song.artist}</p>\n            <button onClick={() => handleShowOptions(song)}>More Options</button>\n            <button onClick={handlePlayPause}>{isPlaying ? 'Pause' : 'Play'}</button>\n            {showOptions && selectedSong && selectedSong.id === song.id && (\n              <div>\n                {/* Display options for the selected song */}\n                <button onClick={handleShowPlaylistPopup}>Option 1</button>\n                <button onClick={() => console.log(\"Option 2\")}>Option 2</button>\n                <button onClick={() => console.log(\"Option 3\")}>Option 3</button>\n                <button onClick={handleCloseOptions}>Close Options</button>\n              </div>\n            )}\n          </div>\n        ))}\n      </div>\n\n      {/* Display playlist popup */}\n      {showPlaylistPopup && (\n        <div className=\"playlist-popup\">\n          <h2>All Playlists</h2>\n          <ul>\n            {playlists.map((playlist) => (\n              <li key={playlist.id}>{playlist.name}</li>\n            ))}\n          </ul>\n          <button onClick={handleClosePlaylistPopup}>Close</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default SearchPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}