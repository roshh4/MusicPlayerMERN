{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\roshi\\\\Desktop\\\\college\\\\internship\\\\webdev\\\\project\\\\try\\\\client\\\\src\\\\footer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\n\n// VolumeControl component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VolumeControl = ({\n  audioRef\n}) => {\n  const handleVolumeChange = event => {\n    const newVolume = parseFloat(event.target.value);\n    audioRef.current.volume = newVolume;\n  };\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"range\",\n    min: \"0\",\n    max: \"1\",\n    step: \"0.1\",\n    onChange: handleVolumeChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n// Footer component\n_c = VolumeControl;\nfunction Footer({\n  selectedSong\n}) {\n  _s();\n  const [audioUrl, setAudioUrl] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const audioRef = useRef();\n  useEffect(() => {\n    const fetchMediaData = async () => {\n      try {\n        console.log('Fetching audio and image URLs for:', selectedSong.name);\n        const audioResponse = await fetch(`http://localhost:3002/api/getAudioUrl/${encodeURIComponent(selectedSong.name)}`);\n        if (!audioResponse.ok) {\n          throw new Error(`Failed to fetch audio URL: ${audioResponse.status} ${audioResponse.statusText}`);\n        }\n        const audioData = await audioResponse.json();\n        console.log('Fetched audio data:', audioData);\n        setAudioUrl(audioData.audioUrl);\n        const imageResponse = await fetch(`http://localhost:3002/api/getImageUrl/${encodeURIComponent(selectedSong.name)}`);\n        if (!imageResponse.ok) {\n          throw new Error(`Failed to fetch image URL: ${imageResponse.status} ${imageResponse.statusText}`);\n        }\n        const imageData = await imageResponse.json();\n        console.log('Fetched image data:', imageData);\n        setImageUrl(imageData.imageUrl);\n\n        // Add the recently played song to the collection\n        await axios.post('http://localhost:3002/api/recentlyPlayed', {\n          songId: selectedSong._id,\n          createdAT: new Date()\n        });\n      } catch (error) {\n        console.error('Error fetching media data:', error);\n      }\n    };\n    if (selectedSong) {\n      fetchMediaData();\n    }\n  }, [selectedSong]);\n  const fakeAudioUrl = 'https://example.com/fake-audio.mp3';\n  const handlePlayPause = () => {\n    if (audioRef.current.paused) {\n      audioRef.current.play();\n    } else {\n      audioRef.current.pause();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: audioUrl ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imageUrl,\n          alt: \"Song Artwork\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePlayPause,\n          children: audioRef.current && audioRef.current.paused ? 'Play' : 'Pause'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n          ref: audioRef,\n          controls: true,\n          children: /*#__PURE__*/_jsxDEV(\"source\", {\n            src: audioUrl,\n            type: \"audio/flac\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(VolumeControl, {\n          audioRef: audioRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading audio...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(Footer, \"zquxpsImupEtbizxvaFYk41aFsY=\");\n_c2 = Footer;\nexport default Footer;\nvar _c, _c2;\n$RefreshReg$(_c, \"VolumeControl\");\n$RefreshReg$(_c2, \"Footer\");","map":{"version":3,"names":["React","useEffect","useState","useRef","axios","jsxDEV","_jsxDEV","VolumeControl","audioRef","handleVolumeChange","event","newVolume","parseFloat","target","value","current","volume","type","min","max","step","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","Footer","selectedSong","_s","audioUrl","setAudioUrl","imageUrl","setImageUrl","fetchMediaData","console","log","name","audioResponse","fetch","encodeURIComponent","ok","Error","status","statusText","audioData","json","imageResponse","imageData","post","songId","_id","createdAT","Date","error","fakeAudioUrl","handlePlayPause","paused","play","pause","children","src","alt","onClick","ref","controls","_c2","$RefreshReg$"],"sources":["C:/Users/roshi/Desktop/college/internship/webdev/project/try/client/src/footer.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport axios from 'axios';\r\n\r\n// VolumeControl component\r\nconst VolumeControl = ({ audioRef }) => {\r\n  const handleVolumeChange = (event) => {\r\n    const newVolume = parseFloat(event.target.value);\r\n    audioRef.current.volume = newVolume;\r\n  };\r\n\r\n  return (\r\n    <input\r\n      type=\"range\"\r\n      min=\"0\"\r\n      max=\"1\"\r\n      step=\"0.1\"\r\n      onChange={handleVolumeChange}\r\n    />\r\n  );\r\n};\r\n\r\n// Footer component\r\nfunction Footer({ selectedSong }) {\r\n  const [audioUrl, setAudioUrl] = useState('');\r\n  const [imageUrl, setImageUrl] = useState('');\r\n  const audioRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const fetchMediaData = async () => {\r\n      try {\r\n        console.log('Fetching audio and image URLs for:', selectedSong.name);\r\n\r\n        const audioResponse = await fetch(`http://localhost:3002/api/getAudioUrl/${encodeURIComponent(selectedSong.name)}`);\r\n\r\n        if (!audioResponse.ok) {\r\n          throw new Error(`Failed to fetch audio URL: ${audioResponse.status} ${audioResponse.statusText}`);\r\n        }\r\n\r\n        const audioData = await audioResponse.json();\r\n        console.log('Fetched audio data:', audioData);\r\n        setAudioUrl(audioData.audioUrl);\r\n\r\n        const imageResponse = await fetch(`http://localhost:3002/api/getImageUrl/${encodeURIComponent(selectedSong.name)}`);\r\n\r\n        if (!imageResponse.ok) {\r\n          throw new Error(`Failed to fetch image URL: ${imageResponse.status} ${imageResponse.statusText}`);\r\n        }\r\n\r\n        const imageData = await imageResponse.json();\r\n        console.log('Fetched image data:', imageData);\r\n        setImageUrl(imageData.imageUrl);\r\n\r\n        // Add the recently played song to the collection\r\n        await axios.post('http://localhost:3002/api/recentlyPlayed', {\r\n          songId: selectedSong._id,\r\n          createdAT: new Date(),\r\n        });\r\n      } catch (error) {\r\n        console.error('Error fetching media data:', error);\r\n      }\r\n    };\r\n\r\n    if (selectedSong) {\r\n      fetchMediaData();\r\n    }\r\n  }, [selectedSong]);\r\n\r\n  const fakeAudioUrl = 'https://example.com/fake-audio.mp3';\r\n\r\n  const handlePlayPause = () => {\r\n    if (audioRef.current.paused) {\r\n      audioRef.current.play();\r\n    } else {\r\n      audioRef.current.pause();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {audioUrl ? (\r\n          <div>\r\n            {imageUrl && <img src={imageUrl} alt=\"Song Artwork\" />}\r\n            {/* Custom play/pause button for default audio player */}\r\n            <button onClick={handlePlayPause}>\r\n              {audioRef.current && audioRef.current.paused ? 'Play' : 'Pause'}\r\n            </button>\r\n            {/* Default audio player with controls */}\r\n            <audio ref={audioRef} controls>\r\n              <source src={audioUrl} type=\"audio/flac\" />\r\n            </audio>\r\n            <VolumeControl audioRef={audioRef} />\r\n          </div>\r\n        ) : (\r\n          <p>Loading audio...</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}