{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\roshi\\\\Desktop\\\\college\\\\internship\\\\webdev\\\\project\\\\try\\\\client\\\\src\\\\SongResults.js\",\n  _s = $RefreshSig$();\n// SongResults.js\nimport React, { useState, useEffect } from 'react';\n// import OptionsPopup from './OptionsPopup';\nimport './SongResults.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SongResults({\n  results,\n  playSong\n}) {\n  _s();\n  const [selectedSong, setSelectedSong] = useState(null);\n  const [playlists, setPlaylists] = useState([]);\n  const [showPlaylists, setShowPlaylists] = useState(false);\n  useEffect(() => {\n    const fetchPlaylists = async () => {\n      try {\n        const response = await fetch('http://localhost:3002/api/playlists');\n        if (response.ok) {\n          const data = await response.json();\n          setPlaylists(data.playlists);\n        } else {\n          console.error('Failed to fetch playlists:', response.status);\n        }\n      } catch (error) {\n        console.error('An error occurred while fetching playlists:', error);\n      }\n    };\n    fetchPlaylists();\n  }, []);\n  const handleOption1 = playlist => {\n    console.log('Playlist ID:', playlist._id);\n    console.log('Selected Song ID:', selectedSong._id);\n    setShowPlaylists(true);\n    console.log(\"Option 1 - Display playlists\");\n  };\n  const handleOption2 = async () => {\n    try {\n      const response = await axios.post('http://localhost:3002/api/likedSongs/addSong', {\n        songId: selectedSong._id\n      });\n      if (response.status === 200) {\n        console.log('Song added to LikedSongs');\n      } else {\n        console.error('Failed to add song to LikedSongs:', response.status);\n      }\n      handleCloseOptions();\n    } catch (error) {\n      console.error('An error occurred while adding song to LikedSongs:', error);\n    }\n  };\n  const handleOption3 = () => {\n    console.log(\"Option 3\");\n    handleCloseOptions();\n  };\n  const handlePlaylistClick = async playlistId => {\n    try {\n      const response = await fetch(`http://localhost:3002/api/playlists/${playlistId}/addSong`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          songId: selectedSong._id\n        })\n      });\n      if (response.ok) {\n        console.log(`Song added to playlist ${playlistId}`);\n      } else {\n        console.error('Failed to add song to playlist:', response.status);\n      }\n    } catch (error) {\n      console.error('An error occurred while adding song to playlist:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: results.length === 0 ? null : /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"song-table\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: results.map(result => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"play-button\",\n            onClick: () => playSong(result),\n            children: \"\\u25B6\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: result.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: result.artist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: result.album\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleShowOptions(result),\n              children: \"Option1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this)]\n        }, result._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(SongResults, \"1vW4W7naGGjCqtoJwuUJ9dS2EmA=\");\n_c = SongResults;\nexport default SongResults;\nvar _c;\n$RefreshReg$(_c, \"SongResults\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","SongResults","results","playSong","_s","selectedSong","setSelectedSong","playlists","setPlaylists","showPlaylists","setShowPlaylists","fetchPlaylists","response","fetch","ok","data","json","console","error","status","handleOption1","playlist","log","_id","handleOption2","post","songId","handleCloseOptions","handleOption3","handlePlaylistClick","playlistId","method","headers","body","JSON","stringify","children","length","className","map","result","onClick","fileName","_jsxFileName","lineNumber","columnNumber","name","artist","album","handleShowOptions","_c","$RefreshReg$"],"sources":["C:/Users/roshi/Desktop/college/internship/webdev/project/try/client/src/SongResults.js"],"sourcesContent":["// SongResults.js\r\nimport React, { useState, useEffect } from 'react';\r\n// import OptionsPopup from './OptionsPopup';\r\nimport './SongResults.css';\r\nimport axios from 'axios';\r\n\r\nfunction SongResults({ results, playSong }) {\r\n  const [selectedSong, setSelectedSong] = useState(null);\r\n  const [playlists, setPlaylists] = useState([]);\r\n  const [showPlaylists, setShowPlaylists] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchPlaylists = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:3002/api/playlists');\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setPlaylists(data.playlists);\r\n        } else {\r\n          console.error('Failed to fetch playlists:', response.status);\r\n        }\r\n      } catch (error) {\r\n        console.error('An error occurred while fetching playlists:', error);\r\n      }\r\n    };\r\n\r\n    fetchPlaylists();\r\n  }, []);\r\n\r\n  const handleOption1 = (playlist) => {\r\n    console.log('Playlist ID:', playlist._id);\r\n    console.log('Selected Song ID:', selectedSong._id);\r\n    setShowPlaylists(true);\r\n    console.log(\"Option 1 - Display playlists\");\r\n  };\r\n\r\n  const handleOption2 = async () => {\r\n    try {\r\n      const response = await axios.post('http://localhost:3002/api/likedSongs/addSong', {\r\n        songId: selectedSong._id,\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        console.log('Song added to LikedSongs');\r\n      } else {\r\n        console.error('Failed to add song to LikedSongs:', response.status);\r\n      }\r\n\r\n      handleCloseOptions();\r\n    } catch (error) {\r\n      console.error('An error occurred while adding song to LikedSongs:', error);\r\n    }\r\n  };\r\n\r\n  const handleOption3 = () => {\r\n    console.log(\"Option 3\");\r\n    handleCloseOptions();\r\n  };\r\n\r\n  const handlePlaylistClick = async (playlistId) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:3002/api/playlists/${playlistId}/addSong`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ songId: selectedSong._id }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        console.log(`Song added to playlist ${playlistId}`);\r\n      } else {\r\n        console.error('Failed to add song to playlist:', response.status);\r\n      }\r\n    } catch (error) {\r\n      console.error('An error occurred while adding song to playlist:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {results.length === 0 ? (\r\n      null\r\n      ) : (\r\n        <table className=\"song-table\">\r\n          <tbody>\r\n            {results.map((result) => (\r\n              <tr key={result._id}>\r\n                <td className=\"play-button\" onClick={() => playSong(result)}>\r\n                  ▶️\r\n                </td>\r\n                <td>{result.name}</td>\r\n                <td>{result.artist}</td>\r\n                <td>{result.album}</td>\r\n                <td>\r\n                  <button onClick={() => handleShowOptions(result)}>Option1</button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SongResults;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}