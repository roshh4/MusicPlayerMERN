{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\roshi\\\\Desktop\\\\college\\\\internship\\\\webdev\\\\project\\\\try\\\\client\\\\src\\\\SearchPage.js\",\n  _s = $RefreshSig$();\n// SearchPage.js\nimport React, { useState, useEffect } from 'react';\nimport SongResults from './SongResults';\nimport AlbumResults from './AlbumResults';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SearchPage({\n  playSong\n}) {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [songResults, setSongResults] = useState([]);\n  const [albumResults, setAlbumResults] = useState([]);\n  const [selectedSong, setSelectedSong] = useState(null);\n  const [isAddingToPlaylist, setIsAddingToPlaylist] = useState(false);\n  const [selectedPlaylist, setSelectedPlaylist] = useState(null);\n\n  // ... (previous code)\n\n  // Handler to open the details for a selected song\n  const handleOpenDetails = song => {\n    setSelectedSong(song);\n  };\n\n  // Handler to close the details\n  const handleCloseDetails = () => {\n    setSelectedSong(null);\n  };\n\n  // Handler to open the playlist selection popup\n  const handleOpenPlaylistPopup = () => {\n    setIsAddingToPlaylist(true);\n  };\n\n  // Handler to close the playlist selection popup\n  const handleClosePlaylistPopup = () => {\n    setIsAddingToPlaylist(false);\n  };\n\n  // Handler to capture the selected playlist and perform the add-to-playlist action\n  const handleAddToPlaylist = playlist => {\n    // Implement the logic to add the selected song to the chosen playlist\n    console.log(`Adding song to playlist: ${playlist.name}`);\n    handleClosePlaylistPopup();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Music Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search for songs or albums\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: songResults.map(song => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: song.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: song.artist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleOpenDetails(song),\n          children: \"More Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleOpenPlaylistPopup,\n          children: \"Add to Playlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), selectedSong && selectedSong.id === song.id && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Option 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Option 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCloseDetails,\n            children: \"Close Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this)]\n      }, song.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), isAddingToPlaylist && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Select Playlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleAddToPlaylist({\n            name: 'Playlist 1'\n          }),\n          children: \"Playlist 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleAddToPlaylist({\n            name: 'Playlist 2'\n          }),\n          children: \"Playlist 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClosePlaylistPopup,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AlbumResults, {\n      results: albumResults\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(SearchPage, \"RcHd85MCle2nbUnLj24ajknYdJQ=\");\n_c = SearchPage;\nexport default SearchPage;\nvar _c;\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"names":["React","useState","useEffect","SongResults","AlbumResults","jsxDEV","_jsxDEV","SearchPage","playSong","_s","searchTerm","setSearchTerm","songResults","setSongResults","albumResults","setAlbumResults","selectedSong","setSelectedSong","isAddingToPlaylist","setIsAddingToPlaylist","selectedPlaylist","setSelectedPlaylist","handleOpenDetails","song","handleCloseDetails","handleOpenPlaylistPopup","handleClosePlaylistPopup","handleAddToPlaylist","playlist","console","log","name","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","map","title","artist","onClick","id","results","_c","$RefreshReg$"],"sources":["C:/Users/roshi/Desktop/college/internship/webdev/project/try/client/src/SearchPage.js"],"sourcesContent":["// SearchPage.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport SongResults from './SongResults';\r\nimport AlbumResults from './AlbumResults';\r\n\r\nfunction SearchPage({ playSong }) {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [songResults, setSongResults] = useState([]);\r\n  const [albumResults, setAlbumResults] = useState([]);\r\n  const [selectedSong, setSelectedSong] = useState(null);\r\n  const [isAddingToPlaylist, setIsAddingToPlaylist] = useState(false);\r\n  const [selectedPlaylist, setSelectedPlaylist] = useState(null);\r\n\r\n  // ... (previous code)\r\n\r\n  // Handler to open the details for a selected song\r\n  const handleOpenDetails = (song) => {\r\n    setSelectedSong(song);\r\n  };\r\n\r\n  // Handler to close the details\r\n  const handleCloseDetails = () => {\r\n    setSelectedSong(null);\r\n  };\r\n\r\n  // Handler to open the playlist selection popup\r\n  const handleOpenPlaylistPopup = () => {\r\n    setIsAddingToPlaylist(true);\r\n  };\r\n\r\n  // Handler to close the playlist selection popup\r\n  const handleClosePlaylistPopup = () => {\r\n    setIsAddingToPlaylist(false);\r\n  };\r\n\r\n  // Handler to capture the selected playlist and perform the add-to-playlist action\r\n  const handleAddToPlaylist = (playlist) => {\r\n    // Implement the logic to add the selected song to the chosen playlist\r\n    console.log(`Adding song to playlist: ${playlist.name}`);\r\n    handleClosePlaylistPopup();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Music Search</h1>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search for songs or albums\"\r\n        value={searchTerm}\r\n        onChange={(e) => setSearchTerm(e.target.value)}\r\n      />\r\n\r\n      {/* Display song results with details and options */}\r\n      <div>\r\n        {songResults.map((song) => (\r\n          <div key={song.id}>\r\n            <h3>{song.title}</h3>\r\n            <p>{song.artist}</p>\r\n            {/* Add other song details here */}\r\n            <button onClick={() => handleOpenDetails(song)}>More Details</button>\r\n            <button onClick={handleOpenPlaylistPopup}>Add to Playlist</button>\r\n            {selectedSong && selectedSong.id === song.id && (\r\n              <div>\r\n                {/* Display options for the selected song */}\r\n                <p>Option 1</p>\r\n                <p>Option 2</p>\r\n                <button onClick={handleCloseDetails}>Close Details</button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Display the playlist selection popup */}\r\n      {isAddingToPlaylist && (\r\n        <div>\r\n          <h2>Select Playlist</h2>\r\n          {/* Fetch and display the user's playlists */}\r\n          {/* Implement logic to fetch and display user's playlists */}\r\n          {/* For simplicity, you can mock the playlists */}\r\n          <ul>\r\n            <li onClick={() => handleAddToPlaylist({ name: 'Playlist 1' })}>Playlist 1</li>\r\n            <li onClick={() => handleAddToPlaylist({ name: 'Playlist 2' })}>Playlist 2</li>\r\n            {/* Add more playlists here */}\r\n          </ul>\r\n          <button onClick={handleClosePlaylistPopup}>Cancel</button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Use the AlbumResults component for albums */}\r\n      <AlbumResults results={albumResults} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}