{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\roshi\\\\Desktop\\\\college\\\\internship\\\\webdev\\\\project\\\\try\\\\client\\\\src\\\\SongResults.js\",\n  _s = $RefreshSig$();\n// SongResults.js\nimport React, { useState, useEffect } from 'react';\nimport OptionsPopup from './OptionsPopup';\nimport './SongResults.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SongResults({\n  results,\n  playSong\n}) {\n  _s();\n  const [selectedSong, setSelectedSong] = useState(null);\n  const [selectedPlaylist, setSelectedPlaylist] = useState(null);\n  const [playlists, setPlaylists] = useState([]);\n  const [showPlaylists, setShowPlaylists] = useState(false);\n  useEffect(() => {\n    const fetchPlaylists = async () => {\n      try {\n        const response = await fetch('http://localhost:3002/api/playlists');\n        if (response.ok) {\n          const data = await response.json();\n          setPlaylists(data.playlists);\n        } else {\n          console.error('Failed to fetch playlists:', response.status);\n        }\n      } catch (error) {\n        console.error('An error occurred while fetching playlists:', error);\n      }\n    };\n\n    // Fetch playlists when the component mounts\n    fetchPlaylists();\n  }, []);\n  const handleShowOptions = result => {\n    setSelectedSong(result);\n    setShowPlaylists(false); // Reset the state when opening options\n  };\n  const handleShowPlaylistOptions = () => {\n    setShowPlaylists(true);\n  };\n  const handleCloseOptions = () => {\n    setSelectedSong(null);\n    setSelectedPlaylist(null);\n    setShowPlaylists(false);\n  };\n  const handleOption1 = playlist => {\n    setSelectedPlaylist(playlist);\n    setShowPlaylists(false);\n    // Implement your logic for Option 1\n    console.log(`Option 1 - Add song to playlist: ${playlist.name}`);\n  };\n  const handleOption2 = () => {\n    console.log(\"Option 2\");\n    // Implement your logic for Option 2\n    handleCloseOptions();\n  };\n  const handleOption3 = () => {\n    console.log(\"Option 3\");\n    // Implement your logic for Option 3\n    handleCloseOptions();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"song-container\",\n      children: results.map(result => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"song-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"play-button\",\n          onClick: () => playSong(result),\n          children: \"\\u25B6\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), \" \", result.name, \", \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Artist:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 52\n        }, this), \" \", result.artist, \", \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Album:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 94\n        }, this), ' ', result.album, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"options-button\",\n          onClick: () => handleShowOptions(result),\n          children: \"\\u22EE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), selectedSong && selectedSong._id === result._id && /*#__PURE__*/_jsxDEV(OptionsPopup, {\n          playlists: playlists,\n          showPlaylists: showPlaylists,\n          handleOption1: handleOption1,\n          handleOption2: handleOption2,\n          handleOption3: handleOption3,\n          handleCloseOptions: handleCloseOptions,\n          selectedSong: selectedSong\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this)]\n      }, result._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), showPlaylists && /*#__PURE__*/_jsxDEV(OptionsPopup, {\n      playlists: playlists,\n      showPlaylists: showPlaylists,\n      handleOption1: handleOption1,\n      handleOption2: handleOption2,\n      handleOption3: handleOption3,\n      handleCloseOptions: handleCloseOptions,\n      selectedSong: selectedSong\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(SongResults, \"dGgDk6Bf7tws7tAzl6ZM2Mhc0k4=\");\n_c = SongResults;\nexport default SongResults;\nvar _c;\n$RefreshReg$(_c, \"SongResults\");","map":{"version":3,"names":["React","useState","useEffect","OptionsPopup","jsxDEV","_jsxDEV","SongResults","results","playSong","_s","selectedSong","setSelectedSong","selectedPlaylist","setSelectedPlaylist","playlists","setPlaylists","showPlaylists","setShowPlaylists","fetchPlaylists","response","fetch","ok","data","json","console","error","status","handleShowOptions","result","handleShowPlaylistOptions","handleCloseOptions","handleOption1","playlist","log","name","handleOption2","handleOption3","children","className","map","onClick","fileName","_jsxFileName","lineNumber","columnNumber","artist","album","_id","_c","$RefreshReg$"],"sources":["C:/Users/roshi/Desktop/college/internship/webdev/project/try/client/src/SongResults.js"],"sourcesContent":["// SongResults.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport OptionsPopup from './OptionsPopup';\r\nimport './SongResults.css';\r\n\r\nfunction SongResults({ results, playSong }) {\r\n  const [selectedSong, setSelectedSong] = useState(null);\r\n  const [selectedPlaylist, setSelectedPlaylist] = useState(null);\r\n  const [playlists, setPlaylists] = useState([]);\r\n  const [showPlaylists, setShowPlaylists] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchPlaylists = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:3002/api/playlists');\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setPlaylists(data.playlists);\r\n        } else {\r\n          console.error('Failed to fetch playlists:', response.status);\r\n        }\r\n      } catch (error) {\r\n        console.error('An error occurred while fetching playlists:', error);\r\n      }\r\n    };\r\n\r\n    // Fetch playlists when the component mounts\r\n    fetchPlaylists();\r\n  }, []);\r\n\r\n  const handleShowOptions = (result) => {\r\n    setSelectedSong(result);\r\n    setShowPlaylists(false); // Reset the state when opening options\r\n  };\r\n\r\n  const handleShowPlaylistOptions = () => {\r\n    setShowPlaylists(true);\r\n  };\r\n\r\n  const handleCloseOptions = () => {\r\n    setSelectedSong(null);\r\n    setSelectedPlaylist(null);\r\n    setShowPlaylists(false);\r\n  };\r\n\r\n  const handleOption1 = (playlist) => {\r\n    setSelectedPlaylist(playlist);\r\n    setShowPlaylists(false);\r\n    // Implement your logic for Option 1\r\n    console.log(`Option 1 - Add song to playlist: ${playlist.name}`);\r\n  };\r\n\r\n  const handleOption2 = () => {\r\n    console.log(\"Option 2\");\r\n    // Implement your logic for Option 2\r\n    handleCloseOptions();\r\n  };\r\n\r\n  const handleOption3 = () => {\r\n    console.log(\"Option 3\");\r\n    // Implement your logic for Option 3\r\n    handleCloseOptions();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ul className=\"song-container\">\r\n        {results.map((result) => (\r\n          <li key={result._id} className=\"song-item\">\r\n            <span className=\"play-button\" onClick={() => playSong(result)}>\r\n              ▶️\r\n            </span>\r\n            <strong>Title:</strong> {result.name}, <strong>Artist:</strong> {result.artist}, <strong>Album:</strong>{' '}\r\n            {result.album}\r\n            \r\n            <span className=\"options-button\" onClick={() => handleShowOptions(result)}>\r\n              &#8942;\r\n            </span>\r\n\r\n            {/* Options popup for the selected song */}\r\n            {selectedSong && selectedSong._id === result._id && (\r\n              <OptionsPopup\r\n                playlists={playlists}\r\n                showPlaylists={showPlaylists}\r\n                handleOption1={handleOption1}\r\n                handleOption2={handleOption2}\r\n                handleOption3={handleOption3}\r\n                handleCloseOptions={handleCloseOptions}\r\n                selectedSong={selectedSong}\r\n              />\r\n            )}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      {/* Display playlists with options when a playlist is clicked */}\r\n      {showPlaylists && (\r\n        <OptionsPopup\r\n          playlists={playlists}\r\n          showPlaylists={showPlaylists}\r\n          handleOption1={handleOption1}\r\n          handleOption2={handleOption2}\r\n          handleOption3={handleOption3}\r\n          handleCloseOptions={handleCloseOptions}\r\n          selectedSong={selectedSong}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SongResults;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}