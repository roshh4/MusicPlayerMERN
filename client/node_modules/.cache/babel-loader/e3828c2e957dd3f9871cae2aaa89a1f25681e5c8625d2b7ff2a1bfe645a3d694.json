{"ast":null,"code":"// import React, { useState } from 'react';\n// import './App.css';\n// import { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\n// import Homepage from './HomePage'; \n// import AlbumDetails from './AlbumDetails'; \n// import Footer from './footer';\n// import Sidebar from './sidebar';\n// import SearchPage from './SearchPage';\n// import PlaylistDetails from './PlaylistDetails';\n// import Favorites from './Favorites'; \n\n// function App() {\n//   const [selectedSong, setSelectedSong] = useState(null);\n\n//   return (\n//     <Router>\n//       <div className=\"App\">\n//         <div className=\"container\">\n//           <Sidebar className=\"sidebar\" />\n//           <div className=\"content\">\n//             <Routes>\n//               <Route\n//                 path=\"/\"\n//                 element={<Homepage setSelectedSong={setSelectedSong}/>}\n//               />\n//               <Route\n//                 path=\"/album/:albumId\"\n//                 element={<AlbumDetails setSelectedSong={setSelectedSong} />}\n//               />\n//               <Route\n//                 path=\"/search\"\n//                 element={<SearchPage playSong={setSelectedSong} />}\n//               />\n//               <Route\n//                 path=\"/playlist/:playlistId\"\n//                 element={<PlaylistDetails setSelectedSong={setSelectedSong} />}\n//               />\n//               {/* Add the route for the Favorites page */}\n//               <Route\n//                 path=\"/favorites\"\n//                 element={<Favorites setSelectedSong={setSelectedSong} />}\n//               />\n//               {/* <Route\n//                 path=\"/\"\n//                 element={<RecentlyPlayed setSelectedSong={setSelectedSong} />}\n//               /> */}\n//             </Routes>\n//           </div>\n//         </div>\n//         <footer className=\"footer\">\n//           {selectedSong && <Footer selectedSong={selectedSong} />}\n//         </footer>\n//       </div>\n//     </Router>\n//   );\n// }\n\n// export default App;\n\n// import React, { useState, useRef, useEffect } from 'react';\n// import './App.css';\n\n// const App = () => {\n//   const audioRef = useRef(null);\n//   const [isPlaying, setIsPlaying] = useState(false);\n//   const [volume, setVolume] = useState(1);\n//   const [currentTime, setCurrentTime] = useState(0);\n//   const [duration, setDuration] = useState(0);\n\n//   useEffect(() => {\n//     const audio = audioRef.current;\n\n//     audio.addEventListener('play', () => setIsPlaying(true));\n//     audio.addEventListener('pause', () => setIsPlaying(false));\n//     audio.addEventListener('timeupdate', () => setCurrentTime(audio.currentTime));\n//     audio.addEventListener('durationchange', () => setDuration(audio.duration));\n\n//     return () => {\n//       audio.removeEventListener('play', () => setIsPlaying(true));\n//       audio.removeEventListener('pause', () => setIsPlaying(false));\n//       audio.removeEventListener('timeupdate', () => setCurrentTime(audio.currentTime));\n//       audio.removeEventListener('durationchange', () => setDuration(audio.duration));\n//     };\n//   }, []);\n\n//   const togglePlayPause = () => {\n//     const audio = audioRef.current;\n//     if (audio.paused) {\n//       audio.play();\n//     } else {\n//       audio.pause();\n//     }\n//   };\n\n//   const handleVolumeChange = (event) => {\n//     const audio = audioRef.current;\n//     setVolume(event.target.value);\n//     audio.volume = event.target.value;\n//   };\n\n//   const calculateProgress = () => {\n//     return (currentTime / duration) * 100;\n//   };\n\n//   const handleTouchMove = (event) => {\n//     const audio = audioRef.current;\n//     const touch = event.touches[0];\n//     const touchX = touch.pageX - event.target.getBoundingClientRect().left;\n//     const progressBarWidth = event.target.clientWidth;\n//     const progress = (touchX / progressBarWidth) * 100;\n\n//     audio.currentTime = (progress / 100) * duration;\n//   };\n\n//   return (\n//     <div className=\"audio-player-container\">\n//       <audio ref={audioRef} src=\"audio/01-fka_twigs-thousand_eyes.flac\"></audio>\n\n//       <div id=\"customControls\">\n//         <button onClick={togglePlayPause}>\n//           {isPlaying ? 'Pause' : 'Play'}\n//         </button>\n//         <input\n//           type=\"range\"\n//           min=\"0\"\n//           max=\"1\"\n//           step=\"0.1\"\n//           value={volume}\n//           onChange={handleVolumeChange}\n//         />\n//         <progress\n//           value={calculateProgress()}\n//           max=\"100\"\n//           onTouchMove={handleTouchMove}\n//         ></progress>\n//         <div className=\"progress-details\">\n//           <span>Current Time: {currentTime.toFixed(2)}s</span>\n//           <span>Duration: {duration.toFixed(2)}s</span>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default App;","map":{"version":3,"names":[],"sources":["C:/Users/roshi/Desktop/college/internship/webdev/project/try/client/src/App.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import './App.css';\n// import { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\n// import Homepage from './HomePage'; \n// import AlbumDetails from './AlbumDetails'; \n// import Footer from './footer';\n// import Sidebar from './sidebar';\n// import SearchPage from './SearchPage';\n// import PlaylistDetails from './PlaylistDetails';\n// import Favorites from './Favorites'; \n\n// function App() {\n//   const [selectedSong, setSelectedSong] = useState(null);\n\n//   return (\n//     <Router>\n//       <div className=\"App\">\n//         <div className=\"container\">\n//           <Sidebar className=\"sidebar\" />\n//           <div className=\"content\">\n//             <Routes>\n//               <Route\n//                 path=\"/\"\n//                 element={<Homepage setSelectedSong={setSelectedSong}/>}\n//               />\n//               <Route\n//                 path=\"/album/:albumId\"\n//                 element={<AlbumDetails setSelectedSong={setSelectedSong} />}\n//               />\n//               <Route\n//                 path=\"/search\"\n//                 element={<SearchPage playSong={setSelectedSong} />}\n//               />\n//               <Route\n//                 path=\"/playlist/:playlistId\"\n//                 element={<PlaylistDetails setSelectedSong={setSelectedSong} />}\n//               />\n//               {/* Add the route for the Favorites page */}\n//               <Route\n//                 path=\"/favorites\"\n//                 element={<Favorites setSelectedSong={setSelectedSong} />}\n//               />\n//               {/* <Route\n//                 path=\"/\"\n//                 element={<RecentlyPlayed setSelectedSong={setSelectedSong} />}\n//               /> */}\n//             </Routes>\n//           </div>\n//         </div>\n//         <footer className=\"footer\">\n//           {selectedSong && <Footer selectedSong={selectedSong} />}\n//         </footer>\n//       </div>\n//     </Router>\n//   );\n// }\n\n// export default App;\n\n// import React, { useState, useRef, useEffect } from 'react';\n// import './App.css';\n\n// const App = () => {\n//   const audioRef = useRef(null);\n//   const [isPlaying, setIsPlaying] = useState(false);\n//   const [volume, setVolume] = useState(1);\n//   const [currentTime, setCurrentTime] = useState(0);\n//   const [duration, setDuration] = useState(0);\n\n//   useEffect(() => {\n//     const audio = audioRef.current;\n\n//     audio.addEventListener('play', () => setIsPlaying(true));\n//     audio.addEventListener('pause', () => setIsPlaying(false));\n//     audio.addEventListener('timeupdate', () => setCurrentTime(audio.currentTime));\n//     audio.addEventListener('durationchange', () => setDuration(audio.duration));\n\n//     return () => {\n//       audio.removeEventListener('play', () => setIsPlaying(true));\n//       audio.removeEventListener('pause', () => setIsPlaying(false));\n//       audio.removeEventListener('timeupdate', () => setCurrentTime(audio.currentTime));\n//       audio.removeEventListener('durationchange', () => setDuration(audio.duration));\n//     };\n//   }, []);\n\n//   const togglePlayPause = () => {\n//     const audio = audioRef.current;\n//     if (audio.paused) {\n//       audio.play();\n//     } else {\n//       audio.pause();\n//     }\n//   };\n\n//   const handleVolumeChange = (event) => {\n//     const audio = audioRef.current;\n//     setVolume(event.target.value);\n//     audio.volume = event.target.value;\n//   };\n\n//   const calculateProgress = () => {\n//     return (currentTime / duration) * 100;\n//   };\n\n//   const handleTouchMove = (event) => {\n//     const audio = audioRef.current;\n//     const touch = event.touches[0];\n//     const touchX = touch.pageX - event.target.getBoundingClientRect().left;\n//     const progressBarWidth = event.target.clientWidth;\n//     const progress = (touchX / progressBarWidth) * 100;\n\n//     audio.currentTime = (progress / 100) * duration;\n//   };\n\n//   return (\n//     <div className=\"audio-player-container\">\n//       <audio ref={audioRef} src=\"audio/01-fka_twigs-thousand_eyes.flac\"></audio>\n\n//       <div id=\"customControls\">\n//         <button onClick={togglePlayPause}>\n//           {isPlaying ? 'Pause' : 'Play'}\n//         </button>\n//         <input\n//           type=\"range\"\n//           min=\"0\"\n//           max=\"1\"\n//           step=\"0.1\"\n//           value={volume}\n//           onChange={handleVolumeChange}\n//         />\n//         <progress\n//           value={calculateProgress()}\n//           max=\"100\"\n//           onTouchMove={handleTouchMove}\n//         ></progress>\n//         <div className=\"progress-details\">\n//           <span>Current Time: {currentTime.toFixed(2)}s</span>\n//           <span>Duration: {duration.toFixed(2)}s</span>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default App;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}