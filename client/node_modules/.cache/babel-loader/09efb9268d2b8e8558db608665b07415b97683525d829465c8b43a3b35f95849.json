{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\roshi\\\\Desktop\\\\college\\\\internship\\\\webdev\\\\project\\\\try\\\\client\\\\src\\\\AlbumDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport OptionsPopup from './OptionsPopup'; // Import the OptionsPopup component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AlbumDetails = ({\n  setSelectedSong\n}) => {\n  _s();\n  const {\n    albumId\n  } = useParams();\n  const [album, setAlbum] = useState(null);\n  const [showOptions, setShowOptions] = useState(null);\n  const [playlists, setPlaylists] = useState([]);\n  useEffect(() => {\n    // Fetch album details from the server\n    const fetchAlbumDetails = async () => {\n      try {\n        const response = await axios.get(`http://localhost:3002/api/albums/${albumId}`);\n        console.log('Album Details Response:', response); // Log the response for debugging\n        if (response.status === 200) {\n          setAlbum(response.data.album);\n        }\n      } catch (error) {\n        console.error('An error occurred:', error);\n      }\n    };\n\n    // Fetch playlists when the component mounts\n    const fetchPlaylists = async () => {\n      try {\n        const response = await axios.get('http://localhost:3002/api/playlists');\n        if (response.status === 200) {\n          setPlaylists(response.data.playlists);\n        } else {\n          console.error('Failed to fetch playlists:', response.status);\n        }\n      } catch (error) {\n        console.error('An error occurred while fetching playlists:', error);\n      }\n    };\n    fetchAlbumDetails();\n    fetchPlaylists();\n  }, [albumId]);\n  const handleSongClick = song => {\n    console.log(song);\n    setSelectedSong(song);\n  };\n  const handleShowOptions = song => {\n    setShowOptions(song._id);\n  };\n  const handleCloseOptions = () => {\n    setShowOptions(null);\n  };\n  const handleOption1 = playlist => {\n    // Log both the playlist's ID and the selected song's ID\n    console.log('Playlist ID:', playlist._id);\n    console.log('Selected Song ID:', showOptions);\n\n    // Implement your logic for Option 1\n    setShowOptions(null);\n    console.log(\"Option 1 - Add to Playlist\");\n  };\n  const handleOption2 = () => {\n    console.log(\"Option 2\");\n    // Implement your logic for Option 2\n    handleCloseOptions();\n  };\n  const handleOption3 = () => {\n    console.log(\"Option 3\");\n    // Implement your logic for Option 3\n    handleCloseOptions();\n  };\n  const handleAddToPlaylist = async playlistId => {\n    try {\n      const response = await axios.post(`http://localhost:3002/api/playlists/${playlistId}/addSong`, {\n        songId: showOptions\n      });\n      if (response.status === 200) {\n        console.log(`Song added to playlist ${playlistId}`);\n        handleCloseOptions();\n      } else {\n        console.error('Failed to add song to playlist:', response.status);\n      }\n    } catch (error) {\n      console.error('An error occurred while adding song to playlist:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"album-details\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Album Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), album ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: album.albumTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Artist: \", album.artist]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Release Date: \", album.releaseDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Record Label: \", album.recordLabel]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `images/${album.albumCoverArt}`,\n        alt: album.albumTitle,\n        style: {\n          maxWidth: '200px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Tracks:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: album.tracklist.map(track => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Title:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this), \" \", track.name, \", \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Duration:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 55\n          }, this), \" \", track.duration, /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => handleSongClick(track),\n            children: \"\\u25B6\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => handleShowOptions(track),\n            children: \"\\u22EE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this), showOptions === track._id && /*#__PURE__*/_jsxDEV(OptionsPopup, {\n            playlists: playlists,\n            showOptions: showOptions,\n            handleOption1: handleOption1,\n            handleOption2: handleOption2,\n            handleOption3: handleOption3,\n            handleCloseOptions: handleCloseOptions,\n            handleAddToPlaylist: handleAddToPlaylist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 19\n          }, this)]\n        }, track._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(AlbumDetails, \"mIsaL7pYEU97KaB6xG1GXjW1/vo=\", false, function () {\n  return [useParams];\n});\n_c = AlbumDetails;\nexport default AlbumDetails;\nvar _c;\n$RefreshReg$(_c, \"AlbumDetails\");","map":{"version":3,"names":["React","useState","useEffect","useParams","axios","OptionsPopup","jsxDEV","_jsxDEV","AlbumDetails","setSelectedSong","_s","albumId","album","setAlbum","showOptions","setShowOptions","playlists","setPlaylists","fetchAlbumDetails","response","get","console","log","status","data","error","fetchPlaylists","handleSongClick","song","handleShowOptions","_id","handleCloseOptions","handleOption1","playlist","handleOption2","handleOption3","handleAddToPlaylist","playlistId","post","songId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","albumTitle","artist","releaseDate","recordLabel","src","albumCoverArt","alt","style","maxWidth","tracklist","map","track","name","duration","onClick","_c","$RefreshReg$"],"sources":["C:/Users/roshi/Desktop/college/internship/webdev/project/try/client/src/AlbumDetails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport OptionsPopup from './OptionsPopup'; // Import the OptionsPopup component\r\n\r\nconst AlbumDetails = ({ setSelectedSong }) => {\r\n  const { albumId } = useParams();\r\n  const [album, setAlbum] = useState(null);\r\n  const [showOptions, setShowOptions] = useState(null);\r\n  const [playlists, setPlaylists] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch album details from the server\r\n    const fetchAlbumDetails = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:3002/api/albums/${albumId}`);\r\n        console.log('Album Details Response:', response); // Log the response for debugging\r\n        if (response.status === 200) {\r\n          setAlbum(response.data.album);\r\n        }\r\n      } catch (error) {\r\n        console.error('An error occurred:', error);\r\n      }\r\n    };\r\n\r\n    // Fetch playlists when the component mounts\r\n    const fetchPlaylists = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:3002/api/playlists');\r\n        if (response.status === 200) {\r\n          setPlaylists(response.data.playlists);\r\n        } else {\r\n          console.error('Failed to fetch playlists:', response.status);\r\n        }\r\n      } catch (error) {\r\n        console.error('An error occurred while fetching playlists:', error);\r\n      }\r\n    };\r\n\r\n    fetchAlbumDetails();\r\n    fetchPlaylists();\r\n  }, [albumId]);\r\n\r\n  const handleSongClick = (song) => {\r\n    console.log(song);\r\n    setSelectedSong(song);\r\n  };\r\n\r\n  const handleShowOptions = (song) => {\r\n    setShowOptions(song._id);\r\n  };\r\n\r\n  const handleCloseOptions = () => {\r\n    setShowOptions(null);\r\n  };\r\n\r\n  const handleOption1 = (playlist) => {\r\n    // Log both the playlist's ID and the selected song's ID\r\n    console.log('Playlist ID:', playlist._id);\r\n    console.log('Selected Song ID:', showOptions);\r\n  \r\n    // Implement your logic for Option 1\r\n    setShowOptions(null);\r\n    console.log(\"Option 1 - Add to Playlist\");\r\n  };\r\n\r\n  const handleOption2 = () => {\r\n    console.log(\"Option 2\");\r\n    // Implement your logic for Option 2\r\n    handleCloseOptions();\r\n  };\r\n\r\n  const handleOption3 = () => {\r\n    console.log(\"Option 3\");\r\n    // Implement your logic for Option 3\r\n    handleCloseOptions();\r\n  };\r\n\r\n  const handleAddToPlaylist = async (playlistId) => {\r\n    try {\r\n      const response = await axios.post(`http://localhost:3002/api/playlists/${playlistId}/addSong`, {\r\n        songId: showOptions,\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        console.log(`Song added to playlist ${playlistId}`);\r\n        handleCloseOptions();\r\n      } else {\r\n        console.error('Failed to add song to playlist:', response.status);\r\n      }\r\n    } catch (error) {\r\n      console.error('An error occurred while adding song to playlist:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"album-details\">\r\n      <h2>Album Details</h2>\r\n      {album ? (\r\n        <div>\r\n          <h3>{album.albumTitle}</h3>\r\n          <p>Artist: {album.artist}</p>\r\n          <p>Release Date: {album.releaseDate}</p>\r\n          <p>Record Label: {album.recordLabel}</p>\r\n          <img src={`images/${album.albumCoverArt}`} alt={album.albumTitle} style={{ maxWidth: '200px' }} />\r\n\r\n          <h4>Tracks:</h4>\r\n          <ul>\r\n            {album.tracklist.map((track) => (\r\n              <li key={track._id}>\r\n                <strong>Title:</strong> {track.name}, <strong>Duration:</strong> {track.duration}\r\n                <span onClick={() => handleSongClick(track)}>▶️</span>\r\n                <span onClick={() => handleShowOptions(track)}>&#8942;</span>\r\n\r\n                {/* Options popup for the selected song */}\r\n                {showOptions === track._id && (\r\n                  <OptionsPopup\r\n                    playlists={playlists}\r\n                    showOptions={showOptions}\r\n                    handleOption1={handleOption1}\r\n                    handleOption2={handleOption2}\r\n                    handleOption3={handleOption3}\r\n                    handleCloseOptions={handleCloseOptions}\r\n                    handleAddToPlaylist={handleAddToPlaylist}\r\n                  />\r\n                )}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      ) : (\r\n        <p>Loading...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AlbumDetails;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}