{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\roshi\\\\Desktop\\\\college\\\\internship\\\\webdev\\\\project\\\\try\\\\client\\\\src\\\\SongResults.js\",\n  _s = $RefreshSig$();\n// SongResults.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './SongResults.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SongResults({\n  results,\n  playSong\n}) {\n  _s();\n  const [selectedSong, setSelectedSong] = useState(null);\n  const [playlists, setPlaylists] = useState([]);\n  const [showPlaylists, setShowPlaylists] = useState(false);\n  const [popupPosition, setPopupPosition] = useState({\n    top: 0,\n    left: 0\n  });\n  useEffect(() => {\n    const fetchPlaylists = async () => {\n      try {\n        const response = await fetch('http://localhost:3002/api/playlists');\n        if (response.ok) {\n          const data = await response.json();\n          setPlaylists(data.playlists);\n        } else {\n          console.error('Failed to fetch playlists:', response.status);\n        }\n      } catch (error) {\n        console.error('An error occurred while fetching playlists:', error);\n      }\n    };\n    fetchPlaylists();\n  }, []);\n  const handleOption1 = () => {\n    setShowPlaylists(true);\n  };\n  const handleOption2 = async () => {\n    try {\n      const response = await axios.post('http://localhost:3002/api/likedSongs/addSong', {\n        songId: selectedSong._id\n      });\n      if (response.status === 200) {\n        console.log('Song added to LikedSongs');\n      } else {\n        console.error('Failed to add song to LikedSongs:', response.status);\n      }\n    } catch (error) {\n      console.error('An error occurred while adding song to LikedSongs:', error);\n    }\n  };\n  const handlePlaylistClick = async playlistId => {\n    try {\n      const response = await fetch(`http://localhost:3002/api/playlists/${playlistId}/addSong`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          songId: selectedSong._id\n        })\n      });\n      if (response.ok) {\n        console.log(`Song added to playlist ${playlistId}`);\n      } else {\n        console.error('Failed to add song to playlist:', response.status);\n      }\n    } catch (error) {\n      console.error('An error occurred while adding song to playlist:', error);\n    }\n  };\n  const closePlaylistsPopup = () => {\n    setShowPlaylists(false);\n  };\n  const handlePlaylistNameClick = playlistId => {\n    handlePlaylistClick(playlistId);\n    closePlaylistsPopup();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [results.length === 0 ? null : /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"song-table\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: results.slice(0, 3).map(result =>\n        /*#__PURE__*/\n        // Display only the first 4 results\n        _jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"play\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `/images/playbu.PNG`,\n              alt: \"Play\",\n              onClick: () => playSong(result)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"image\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `/images/${result.imageURL}`,\n              alt: result.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"name\",\n            children: result.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"play\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `/images/icons8-music-heart-96.PNG`,\n              alt: \"Play\",\n              onClick: () => handleOption2(result)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"artist\",\n            children: result.artist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"album\",\n            children: result.album\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"play\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `/images/icons8-add-song-96.PNG`,\n              alt: \"Play\",\n              onClick: handleOption1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this)]\n        }, result._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), showPlaylists && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playlist-popup-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playlist-popup-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"close-popup\",\n          onClick: closePlaylistsPopup,\n          children: \"close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"All Playlists\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: playlists.map(playlist => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => handlePlaylistNameClick(playlist._id),\n            children: playlist.name\n          }, playlist._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(SongResults, \"zPVxeTmnqu2Cr1SQAx+4plVaMZw=\");\n_c = SongResults;\nexport default SongResults;\nvar _c;\n$RefreshReg$(_c, \"SongResults\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","SongResults","results","playSong","_s","selectedSong","setSelectedSong","playlists","setPlaylists","showPlaylists","setShowPlaylists","popupPosition","setPopupPosition","top","left","fetchPlaylists","response","fetch","ok","data","json","console","error","status","handleOption1","handleOption2","post","songId","_id","log","handlePlaylistClick","playlistId","method","headers","body","JSON","stringify","closePlaylistsPopup","handlePlaylistNameClick","children","length","className","slice","map","result","src","alt","onClick","fileName","_jsxFileName","lineNumber","columnNumber","imageURL","name","artist","album","playlist","_c","$RefreshReg$"],"sources":["C:/Users/roshi/Desktop/college/internship/webdev/project/try/client/src/SongResults.js"],"sourcesContent":["// SongResults.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './SongResults.css';\r\n\r\nfunction SongResults({ results, playSong }) {\r\n  const [selectedSong, setSelectedSong] = useState(null);\r\n  const [playlists, setPlaylists] = useState([]);\r\n  const [showPlaylists, setShowPlaylists] = useState(false);\r\n  const [popupPosition, setPopupPosition] = useState({ top: 0, left: 0 });\r\n\r\n  useEffect(() => {\r\n    const fetchPlaylists = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:3002/api/playlists');\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setPlaylists(data.playlists);\r\n        } else {\r\n          console.error('Failed to fetch playlists:', response.status);\r\n        }\r\n      } catch (error) {\r\n        console.error('An error occurred while fetching playlists:', error);\r\n      }\r\n    };\r\n\r\n    fetchPlaylists();\r\n  }, []);\r\n\r\n  const handleOption1 = () => {\r\n    setShowPlaylists(true);\r\n  };\r\n\r\n  const handleOption2 = async () => {\r\n    try {\r\n      const response = await axios.post('http://localhost:3002/api/likedSongs/addSong', {\r\n        songId: selectedSong._id,\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        console.log('Song added to LikedSongs');\r\n      } else {\r\n        console.error('Failed to add song to LikedSongs:', response.status);\r\n      }\r\n    } catch (error) {\r\n      console.error('An error occurred while adding song to LikedSongs:', error);\r\n    }\r\n  };\r\n\r\n  const handlePlaylistClick = async (playlistId) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:3002/api/playlists/${playlistId}/addSong`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ songId: selectedSong._id }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        console.log(`Song added to playlist ${playlistId}`);\r\n      } else {\r\n        console.error('Failed to add song to playlist:', response.status);\r\n      }\r\n    } catch (error) {\r\n      console.error('An error occurred while adding song to playlist:', error);\r\n    }\r\n  };\r\n\r\n  const closePlaylistsPopup = () => {\r\n    setShowPlaylists(false);\r\n  };\r\n\r\n  const handlePlaylistNameClick = (playlistId) => {\r\n    handlePlaylistClick(playlistId);\r\n    closePlaylistsPopup();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {results.length === 0 ? (\r\n        null\r\n      ) : (\r\n        <table className=\"song-table\">\r\n          <tbody>\r\n            {results.slice(0, 3).map((result) => (  // Display only the first 4 results\r\n              <tr key={result._id}>\r\n                <td className=\"play\">\r\n                  <img src={`/images/playbu.PNG`} alt=\"Play\" onClick={() => playSong(result)} />\r\n                </td>\r\n                <td className='image'>\r\n                  <img src={`/images/${result.imageURL}`} alt={result.name} />\r\n                </td>\r\n                <td className='name'>{result.name}</td>\r\n                <td className=\"play\">\r\n                  <img src={`/images/icons8-music-heart-96.PNG`} alt=\"Play\" onClick={() => handleOption2(result)} />\r\n                </td>\r\n                <td className='artist'>{result.artist}</td>\r\n                <td className='album'>{result.album}</td>\r\n                <td className=\"play\">\r\n                  <img src={`/images/icons8-add-song-96.PNG`} alt=\"Play\" onClick={handleOption1} />\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n\r\n{showPlaylists && (\r\n        <div className=\"playlist-popup-overlay\">\r\n          <div className=\"playlist-popup-content\">\r\n            <span className=\"close-popup\" onClick={closePlaylistsPopup}>close</span>\r\n            <h3>All Playlists</h3>\r\n            <ul>\r\n              {playlists.map((playlist) => (\r\n                <li key={playlist._id} onClick={() => handlePlaylistNameClick(playlist._id)}>\r\n                  {playlist.name}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default SongResults;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}